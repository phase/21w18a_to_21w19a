--- net/minecraft/client/renderer/block/model/BlockModelDefinition.java
+++ net/minecraft/client/renderer/block/model/BlockModelDefinition.java
@@ -113,11 +113,27 @@
 
    public MultiPart getMultiPart() {
       return this.multiPart;
    }
 
-   public class MissingVariantException extends RuntimeException {
+   public static final class Context {
+      protected final Gson gson = (new GsonBuilder()).registerTypeAdapter(BlockModelDefinition.class, new BlockModelDefinition.Deserializer()).registerTypeAdapter(Variant.class, new Variant.Deserializer()).registerTypeAdapter(MultiVariant.class, new MultiVariant.Deserializer()).registerTypeAdapter(MultiPart.class, new MultiPart.Deserializer(this)).registerTypeAdapter(Selector.class, new Selector.Deserializer()).create();
+      private StateDefinition<Block, BlockState> definition;
+
+      public Context() {
+      }
+
+      public StateDefinition<Block, BlockState> getDefinition() {
+         return this.definition;
+      }
+
+      public void setDefinition(StateDefinition<Block, BlockState> var1) {
+         this.definition = var1;
+      }
+   }
+
+   protected class MissingVariantException extends RuntimeException {
       protected MissingVariantException() {
       }
    }
 
    public static class Deserializer implements JsonDeserializer<BlockModelDefinition> {
@@ -141,11 +157,11 @@
             JsonObject var4 = GsonHelper.getAsJsonObject(var2, "variants");
             Iterator var5 = var4.entrySet().iterator();
 
             while(var5.hasNext()) {
                Entry var6 = (Entry)var5.next();
-               var3.put(var6.getKey(), var1.deserialize((JsonElement)var6.getValue(), MultiVariant.class));
+               var3.put((String)var6.getKey(), (MultiVariant)var1.deserialize((JsonElement)var6.getValue(), MultiVariant.class));
             }
          }
 
          return var3;
       }
@@ -158,22 +174,6 @@
             JsonArray var3 = GsonHelper.getAsJsonArray(var2, "multipart");
             return (MultiPart)var1.deserialize(var3, MultiPart.class);
          }
       }
    }
-
-   public static final class Context {
-      protected final Gson gson = (new GsonBuilder()).registerTypeAdapter(BlockModelDefinition.class, new BlockModelDefinition.Deserializer()).registerTypeAdapter(Variant.class, new Variant.Deserializer()).registerTypeAdapter(MultiVariant.class, new MultiVariant.Deserializer()).registerTypeAdapter(MultiPart.class, new MultiPart.Deserializer(this)).registerTypeAdapter(Selector.class, new Selector.Deserializer()).create();
-      private StateDefinition<Block, BlockState> definition;
-
-      public Context() {
-      }
-
-      public StateDefinition<Block, BlockState> getDefinition() {
-         return this.definition;
-      }
-
-      public void setDefinition(StateDefinition<Block, BlockState> var1) {
-         this.definition = var1;
-      }
-   }
 }
