--- net/minecraft/client/gui/screens/LoadingOverlay.java
+++ net/minecraft/client/gui/screens/LoadingOverlay.java
@@ -21,11 +21,11 @@
 import net.minecraft.server.packs.resources.ResourceManager;
 import net.minecraft.util.FastColor;
 import net.minecraft.util.Mth;
 
 public class LoadingOverlay extends Overlay {
-   private static final ResourceLocation MOJANG_STUDIOS_LOGO_LOCATION = new ResourceLocation("textures/gui/title/mojangstudios.png");
+   static final ResourceLocation MOJANG_STUDIOS_LOGO_LOCATION = new ResourceLocation("textures/gui/title/mojangstudios.png");
    private static final int LOGO_BACKGROUND_COLOR = FastColor.ARGB32.color(255, 239, 50, 61);
    private static final int LOGO_BACKGROUND_COLOR_DARK = FastColor.ARGB32.color(255, 0, 0, 0);
    private static final IntSupplier BRAND_BACKGROUND = () -> {
       return Minecraft.getInstance().options.darkMojangStudiosBackground ? LOGO_BACKGROUND_COLOR_DARK : LOGO_BACKGROUND_COLOR;
    };
@@ -149,46 +149,43 @@
 
    public boolean isPauseScreen() {
       return true;
    }
 
-   static class LogoTexture extends SimpleTexture {
+   private static class LogoTexture extends SimpleTexture {
       public LogoTexture() {
          super(LoadingOverlay.MOJANG_STUDIOS_LOGO_LOCATION);
       }
 
       protected SimpleTexture.TextureImage getTextureImage(ResourceManager var1) {
          Minecraft var2 = Minecraft.getInstance();
          VanillaPackResources var3 = var2.getClientPackSource().getVanillaPack();
 
          try {
             InputStream var4 = var3.getResource(PackType.CLIENT_RESOURCES, LoadingOverlay.MOJANG_STUDIOS_LOGO_LOCATION);
-            Throwable var5 = null;
 
-            SimpleTexture.TextureImage var6;
+            SimpleTexture.TextureImage var5;
             try {
-               var6 = new SimpleTexture.TextureImage(new TextureMetadataSection(true, true), NativeImage.read(var4));
-            } catch (Throwable var16) {
-               var5 = var16;
-               throw var16;
-            } finally {
+               var5 = new SimpleTexture.TextureImage(new TextureMetadataSection(true, true), NativeImage.read(var4));
+            } catch (Throwable var8) {
                if (var4 != null) {
-                  if (var5 != null) {
-                     try {
-                        var4.close();
-                     } catch (Throwable var15) {
-                        var5.addSuppressed(var15);
-                     }
-                  } else {
+                  try {
                      var4.close();
+                  } catch (Throwable var7) {
+                     var8.addSuppressed(var7);
                   }
                }
 
+               throw var8;
             }
 
-            return var6;
-         } catch (IOException var18) {
-            return new SimpleTexture.TextureImage(var18);
+            if (var4 != null) {
+               var4.close();
+            }
+
+            return var5;
+         } catch (IOException var9) {
+            return new SimpleTexture.TextureImage(var9);
          }
       }
    }
 }
