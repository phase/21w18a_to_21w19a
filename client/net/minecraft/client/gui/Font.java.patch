--- net/minecraft/client/gui/Font.java
+++ net/minecraft/client/gui/Font.java
@@ -45,11 +45,11 @@
       this.splitter = new StringSplitter((var1x, var2) -> {
          return this.getFontSet(var2.getFont()).getGlyphInfo(var1x).getAdvance(var2.isBold());
       });
    }
 
-   private FontSet getFontSet(ResourceLocation var1) {
+   FontSet getFontSet(ResourceLocation var1) {
       return (FontSet)this.fonts.apply(var1);
    }
 
    public int drawShadow(PoseStack var1, String var2, float var3, float var4, int var5) {
       return this.drawInternal(var2, var3, var4, var5, var1.last().pose(), true, this.isBidirectional());
@@ -165,11 +165,11 @@
       Font.StringRenderOutput var11 = new Font.StringRenderOutput(var7, var2, var3, var4, var5, var6, var8, var10);
       var1.accept(var11);
       return var11.finish(var9, var2);
    }
 
-   private void renderChar(BakedGlyph var1, boolean var2, boolean var3, float var4, float var5, float var6, Matrix4f var7, VertexConsumer var8, float var9, float var10, float var11, float var12, int var13) {
+   void renderChar(BakedGlyph var1, boolean var2, boolean var3, float var4, float var5, float var6, Matrix4f var7, VertexConsumer var8, float var9, float var10, float var11, float var12, int var13) {
       var1.render(var3, var5, var6, var7, var8, var9, var10, var11, var12, var13);
       if (var2) {
          var1.render(var3, var5 + var4, var6, var7, var8, var9, var10, var11, var12, var13);
       }
 
