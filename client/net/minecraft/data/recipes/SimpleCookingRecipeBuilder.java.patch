--- net/minecraft/data/recipes/SimpleCookingRecipeBuilder.java
+++ net/minecraft/data/recipes/SimpleCookingRecipeBuilder.java
@@ -70,11 +70,19 @@
    }
 
    public void save(Consumer<FinishedRecipe> var1, ResourceLocation var2) {
       this.ensureValid(var2);
       this.advancement.parent(new ResourceLocation("recipes/root")).addCriterion("has_the_recipe", (CriterionTriggerInstance)RecipeUnlockedTrigger.unlocked(var2)).rewards(AdvancementRewards.Builder.recipe(var2)).requirements(RequirementsStrategy.OR);
-      var1.accept(new SimpleCookingRecipeBuilder.Result(var2, this.group == null ? "" : this.group, this.ingredient, this.result, this.experience, this.cookingTime, this.advancement, new ResourceLocation(var2.getNamespace(), "recipes/" + this.result.getItemCategory().getRecipeFolderName() + "/" + var2.getPath()), this.serializer));
+      String var10004 = this.group == null ? "" : this.group;
+      Ingredient var10005 = this.ingredient;
+      Item var10006 = this.result;
+      float var10007 = this.experience;
+      int var10008 = this.cookingTime;
+      Advancement.Builder var10009 = this.advancement;
+      String var10012 = var2.getNamespace();
+      String var10013 = this.result.getItemCategory().getRecipeFolderName();
+      var1.accept(new SimpleCookingRecipeBuilder.Result(var2, var10004, var10005, var10006, var10007, var10008, var10009, new ResourceLocation(var10012, "recipes/" + var10013 + "/" + var2.getPath()), this.serializer));
    }
 
    private void ensureValid(ResourceLocation var1) {
       if (this.advancement.getCriteria().isEmpty()) {
          throw new IllegalStateException("No way of obtaining recipe " + var1);
