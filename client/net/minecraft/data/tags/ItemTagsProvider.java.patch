--- net/minecraft/data/tags/ItemTagsProvider.java
+++ net/minecraft/data/tags/ItemTagsProvider.java
@@ -1,9 +1,11 @@
 package net.minecraft.data.tags;
 
 import java.nio.file.Path;
+import java.util.Objects;
 import java.util.function.Function;
+import java.util.stream.Stream;
 import net.minecraft.core.Registry;
 import net.minecraft.data.DataGenerator;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.tags.BlockTags;
 import net.minecraft.tags.ItemTags;
@@ -15,10 +17,11 @@
 public class ItemTagsProvider extends TagsProvider<Item> {
    private final Function<Tag.Named<Block>, Tag.Builder> blockTags;
 
    public ItemTagsProvider(DataGenerator var1, BlockTagsProvider var2) {
       super(var1, Registry.ITEM);
+      Objects.requireNonNull(var2);
       this.blockTags = var2::getOrCreateRawBuilder;
    }
 
    protected void addTags() {
       this.copy(BlockTags.WOOL, ItemTags.WOOL);
@@ -93,15 +96,19 @@
    }
 
    protected void copy(Tag.Named<Block> var1, Tag.Named<Item> var2) {
       Tag.Builder var3 = this.getOrCreateRawBuilder(var2);
       Tag.Builder var4 = (Tag.Builder)this.blockTags.apply(var1);
-      var4.getEntries().forEach(var3::add);
+      Stream var10000 = var4.getEntries();
+      Objects.requireNonNull(var3);
+      var10000.forEach(var3::add);
    }
 
    protected Path getPath(ResourceLocation var1) {
-      return this.generator.getOutputFolder().resolve("data/" + var1.getNamespace() + "/tags/items/" + var1.getPath() + ".json");
+      Path var10000 = this.generator.getOutputFolder();
+      String var10001 = var1.getNamespace();
+      return var10000.resolve("data/" + var10001 + "/tags/items/" + var1.getPath() + ".json");
    }
 
    public String getName() {
       return "Item Tags";
    }
