--- net/minecraft/server/dedicated/ServerWatchdog.java
+++ net/minecraft/server/dedicated/ServerWatchdog.java
@@ -12,10 +12,11 @@
 import java.util.TimerTask;
 import java.util.stream.Collectors;
 import net.minecraft.CrashReport;
 import net.minecraft.CrashReportCategory;
 import net.minecraft.Util;
+import net.minecraft.resources.ResourceKey;
 import net.minecraft.server.Bootstrap;
 import net.minecraft.world.level.GameRules;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
@@ -64,15 +65,19 @@
             var18.setDetail("Random tick rate", () -> {
                return ((GameRules.IntegerValue)this.server.getWorldData().getGameRules().getRule(GameRules.RULE_RANDOMTICKING)).toString();
             });
             var18.setDetail("Level stats", () -> {
                return (String)Streams.stream(this.server.getAllLevels()).map((var0) -> {
-                  return var0.dimension() + ": " + var0.getWatchdogStats();
+                  ResourceKey var10000 = var0.dimension();
+                  return var10000 + ": " + var0.getWatchdogStats();
                }).collect(Collectors.joining(",\n"));
             });
             Bootstrap.realStdoutPrintln("Crash report:\n" + var16.getFriendlyReport());
-            File var19 = new File(new File(this.server.getServerDirectory(), "crash-reports"), "crash-" + (new SimpleDateFormat("yyyy-MM-dd_HH.mm.ss")).format(new Date()) + "-server.txt");
+            File var10002 = new File(this.server.getServerDirectory(), "crash-reports");
+            SimpleDateFormat var10003 = new SimpleDateFormat("yyyy-MM-dd_HH.mm.ss");
+            Date var10004 = new Date();
+            File var19 = new File(var10002, "crash-" + var10003.format(var10004) + "-server.txt");
             if (var16.saveToFile(var19)) {
                LOGGER.error("This crash report has been saved to: {}", var19.getAbsolutePath());
             } else {
                LOGGER.error("We were unable to save this crash report to disk.");
             }
