--- net/minecraft/server/level/ServerPlayer.java
+++ net/minecraft/server/level/ServerPlayer.java
@@ -6,10 +6,11 @@
 import com.mojang.serialization.DataResult;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Iterator;
 import java.util.List;
+import java.util.Objects;
 import java.util.Optional;
 import java.util.OptionalInt;
 import java.util.Random;
 import java.util.UUID;
 import javax.annotation.Nullable;
@@ -313,11 +314,11 @@
          this.respawnForced = var1.getBoolean("SpawnForced");
          this.respawnAngle = var1.getFloat("SpawnAngle");
          if (var1.contains("SpawnDimension")) {
             DataResult var10001 = Level.RESOURCE_KEY_CODEC.parse(NbtOps.INSTANCE, var1.get("SpawnDimension"));
             Logger var10002 = LOGGER;
-            var10002.getClass();
+            Objects.requireNonNull(var10002);
             this.respawnDimension = (ResourceKey)var10001.resultOrPartial(var10002::error).orElse(Level.OVERWORLD);
          }
       }
 
    }
@@ -353,11 +354,11 @@
          var1.putInt("SpawnZ", this.respawnPosition.getZ());
          var1.putBoolean("SpawnForced", this.respawnForced);
          var1.putFloat("SpawnAngle", this.respawnAngle);
          DataResult var10000 = ResourceLocation.CODEC.encodeStart(NbtOps.INSTANCE, this.respawnDimension.location());
          Logger var10001 = LOGGER;
-         var10001.getClass();
+         Objects.requireNonNull(var10001);
          var10000.resultOrPartial(var10001::error).ifPresent((var1x) -> {
             var1.put("SpawnDimension", var1x);
          });
       }
 
@@ -1033,11 +1034,13 @@
       ResourceLocation[] var3 = var1;
       int var4 = var1.length;
 
       for(int var5 = 0; var5 < var4; ++var5) {
          ResourceLocation var6 = var3[var5];
-         this.server.getRecipeManager().byKey(var6).ifPresent(var2::add);
+         Optional var10000 = this.server.getRecipeManager().byKey(var6);
+         Objects.requireNonNull(var2);
+         var10000.ifPresent(var2::add);
       }
 
       this.awardRecipes(var2);
    }
 
@@ -1110,11 +1113,11 @@
          this.setScore(var1.getScore());
       }
 
       this.enchantmentSeed = var1.enchantmentSeed;
       this.enderChestInventory = var1.enderChestInventory;
-      this.getEntityData().set(DATA_PLAYER_MODE_CUSTOMISATION, var1.getEntityData().get(DATA_PLAYER_MODE_CUSTOMISATION));
+      this.getEntityData().set(DATA_PLAYER_MODE_CUSTOMISATION, (Byte)var1.getEntityData().get(DATA_PLAYER_MODE_CUSTOMISATION));
       this.lastSentExp = -1;
       this.lastSentHealth = -1.0F;
       this.lastSentFood = -1;
       this.recipeBook.copyOverData(var1.recipeBook);
       this.seenCredits = var1.seenCredits;
