--- net/minecraft/server/commands/ItemCommands.java
+++ net/minecraft/server/commands/ItemCommands.java
@@ -67,39 +67,39 @@
    }
 
    public static void register(CommandDispatcher<CommandSourceStack> var0) {
       var0.register((LiteralArgumentBuilder)((LiteralArgumentBuilder)((LiteralArgumentBuilder)Commands.literal("item").requires((var0x) -> {
          return var0x.hasPermission(2);
-      })).then(Commands.literal("block").then(Commands.argument("pos", BlockPosArgument.blockPos()).then(((RequiredArgumentBuilder)((RequiredArgumentBuilder)Commands.argument("slot", SlotArgument.slot()).then(Commands.literal("replace").then(((RequiredArgumentBuilder)Commands.argument("item", ItemArgument.item()).executes((var0x) -> {
+      })).then(((LiteralArgumentBuilder)Commands.literal("replace").then(Commands.literal("block").then(Commands.argument("pos", BlockPosArgument.blockPos()).then(((RequiredArgumentBuilder)Commands.argument("slot", SlotArgument.slot()).then(Commands.literal("with").then(((RequiredArgumentBuilder)Commands.argument("item", ItemArgument.item()).executes((var0x) -> {
          return setBlockItem((CommandSourceStack)var0x.getSource(), BlockPosArgument.getLoadedBlockPos(var0x, "pos"), SlotArgument.getSlot(var0x, "slot"), ItemArgument.getItem(var0x, "item").createItemStack(1, false));
       })).then(Commands.argument("count", IntegerArgumentType.integer(1, 64)).executes((var0x) -> {
          return setBlockItem((CommandSourceStack)var0x.getSource(), BlockPosArgument.getLoadedBlockPos(var0x, "pos"), SlotArgument.getSlot(var0x, "slot"), ItemArgument.getItem(var0x, "item").createItemStack(IntegerArgumentType.getInteger(var0x, "count"), true));
-      }))))).then(Commands.literal("modify").then(Commands.argument("modifier", ResourceLocationArgument.id()).suggests(SUGGEST_MODIFIER).executes((var0x) -> {
-         return modifyBlockItem((CommandSourceStack)var0x.getSource(), BlockPosArgument.getLoadedBlockPos(var0x, "pos"), SlotArgument.getSlot(var0x, "slot"), ResourceLocationArgument.getItemModifier(var0x, "modifier"));
-      })))).then(((LiteralArgumentBuilder)Commands.literal("copy").then(Commands.literal("block").then(Commands.argument("source", BlockPosArgument.blockPos()).then(((RequiredArgumentBuilder)Commands.argument("sourceSlot", SlotArgument.slot()).executes((var0x) -> {
+      }))))).then(((LiteralArgumentBuilder)Commands.literal("from").then(Commands.literal("block").then(Commands.argument("source", BlockPosArgument.blockPos()).then(((RequiredArgumentBuilder)Commands.argument("sourceSlot", SlotArgument.slot()).executes((var0x) -> {
          return blockToBlock((CommandSourceStack)var0x.getSource(), BlockPosArgument.getLoadedBlockPos(var0x, "source"), SlotArgument.getSlot(var0x, "sourceSlot"), BlockPosArgument.getLoadedBlockPos(var0x, "pos"), SlotArgument.getSlot(var0x, "slot"));
       })).then(Commands.argument("modifier", ResourceLocationArgument.id()).suggests(SUGGEST_MODIFIER).executes((var0x) -> {
          return blockToBlock((CommandSourceStack)var0x.getSource(), BlockPosArgument.getLoadedBlockPos(var0x, "source"), SlotArgument.getSlot(var0x, "sourceSlot"), BlockPosArgument.getLoadedBlockPos(var0x, "pos"), SlotArgument.getSlot(var0x, "slot"), ResourceLocationArgument.getItemModifier(var0x, "modifier"));
       })))))).then(Commands.literal("entity").then(Commands.argument("source", EntityArgument.entity()).then(((RequiredArgumentBuilder)Commands.argument("sourceSlot", SlotArgument.slot()).executes((var0x) -> {
          return entityToBlock((CommandSourceStack)var0x.getSource(), EntityArgument.getEntity(var0x, "source"), SlotArgument.getSlot(var0x, "sourceSlot"), BlockPosArgument.getLoadedBlockPos(var0x, "pos"), SlotArgument.getSlot(var0x, "slot"));
       })).then(Commands.argument("modifier", ResourceLocationArgument.id()).suggests(SUGGEST_MODIFIER).executes((var0x) -> {
          return entityToBlock((CommandSourceStack)var0x.getSource(), EntityArgument.getEntity(var0x, "source"), SlotArgument.getSlot(var0x, "sourceSlot"), BlockPosArgument.getLoadedBlockPos(var0x, "pos"), SlotArgument.getSlot(var0x, "slot"), ResourceLocationArgument.getItemModifier(var0x, "modifier"));
-      })))))))))).then(Commands.literal("entity").then(Commands.argument("targets", EntityArgument.entities()).then(((RequiredArgumentBuilder)((RequiredArgumentBuilder)Commands.argument("slot", SlotArgument.slot()).then(Commands.literal("replace").then(((RequiredArgumentBuilder)Commands.argument("item", ItemArgument.item()).executes((var0x) -> {
+      })))))))))).then(Commands.literal("entity").then(Commands.argument("targets", EntityArgument.entities()).then(((RequiredArgumentBuilder)Commands.argument("slot", SlotArgument.slot()).then(Commands.literal("with").then(((RequiredArgumentBuilder)Commands.argument("item", ItemArgument.item()).executes((var0x) -> {
          return setEntityItem((CommandSourceStack)var0x.getSource(), EntityArgument.getEntities(var0x, "targets"), SlotArgument.getSlot(var0x, "slot"), ItemArgument.getItem(var0x, "item").createItemStack(1, false));
       })).then(Commands.argument("count", IntegerArgumentType.integer(1, 64)).executes((var0x) -> {
          return setEntityItem((CommandSourceStack)var0x.getSource(), EntityArgument.getEntities(var0x, "targets"), SlotArgument.getSlot(var0x, "slot"), ItemArgument.getItem(var0x, "item").createItemStack(IntegerArgumentType.getInteger(var0x, "count"), true));
-      }))))).then(Commands.literal("modify").then(Commands.argument("modifier", ResourceLocationArgument.id()).suggests(SUGGEST_MODIFIER).executes((var0x) -> {
-         return modifyEntityItem((CommandSourceStack)var0x.getSource(), EntityArgument.getEntities(var0x, "targets"), SlotArgument.getSlot(var0x, "slot"), ResourceLocationArgument.getItemModifier(var0x, "modifier"));
-      })))).then(((LiteralArgumentBuilder)Commands.literal("copy").then(Commands.literal("block").then(Commands.argument("source", BlockPosArgument.blockPos()).then(((RequiredArgumentBuilder)Commands.argument("sourceSlot", SlotArgument.slot()).executes((var0x) -> {
+      }))))).then(((LiteralArgumentBuilder)Commands.literal("from").then(Commands.literal("block").then(Commands.argument("source", BlockPosArgument.blockPos()).then(((RequiredArgumentBuilder)Commands.argument("sourceSlot", SlotArgument.slot()).executes((var0x) -> {
          return blockToEntities((CommandSourceStack)var0x.getSource(), BlockPosArgument.getLoadedBlockPos(var0x, "source"), SlotArgument.getSlot(var0x, "sourceSlot"), EntityArgument.getEntities(var0x, "targets"), SlotArgument.getSlot(var0x, "slot"));
       })).then(Commands.argument("modifier", ResourceLocationArgument.id()).suggests(SUGGEST_MODIFIER).executes((var0x) -> {
          return blockToEntities((CommandSourceStack)var0x.getSource(), BlockPosArgument.getLoadedBlockPos(var0x, "source"), SlotArgument.getSlot(var0x, "sourceSlot"), EntityArgument.getEntities(var0x, "targets"), SlotArgument.getSlot(var0x, "slot"), ResourceLocationArgument.getItemModifier(var0x, "modifier"));
       })))))).then(Commands.literal("entity").then(Commands.argument("source", EntityArgument.entity()).then(((RequiredArgumentBuilder)Commands.argument("sourceSlot", SlotArgument.slot()).executes((var0x) -> {
          return entityToEntities((CommandSourceStack)var0x.getSource(), EntityArgument.getEntity(var0x, "source"), SlotArgument.getSlot(var0x, "sourceSlot"), EntityArgument.getEntities(var0x, "targets"), SlotArgument.getSlot(var0x, "slot"));
       })).then(Commands.argument("modifier", ResourceLocationArgument.id()).suggests(SUGGEST_MODIFIER).executes((var0x) -> {
          return entityToEntities((CommandSourceStack)var0x.getSource(), EntityArgument.getEntity(var0x, "source"), SlotArgument.getSlot(var0x, "sourceSlot"), EntityArgument.getEntities(var0x, "targets"), SlotArgument.getSlot(var0x, "slot"), ResourceLocationArgument.getItemModifier(var0x, "modifier"));
-      }))))))))));
+      }))))))))))).then(((LiteralArgumentBuilder)Commands.literal("modify").then(Commands.literal("block").then(Commands.argument("pos", BlockPosArgument.blockPos()).then(Commands.argument("slot", SlotArgument.slot()).then(Commands.argument("modifier", ResourceLocationArgument.id()).suggests(SUGGEST_MODIFIER).executes((var0x) -> {
+         return modifyBlockItem((CommandSourceStack)var0x.getSource(), BlockPosArgument.getLoadedBlockPos(var0x, "pos"), SlotArgument.getSlot(var0x, "slot"), ResourceLocationArgument.getItemModifier(var0x, "modifier"));
+      })))))).then(Commands.literal("entity").then(Commands.argument("targets", EntityArgument.entities()).then(Commands.argument("slot", SlotArgument.slot()).then(Commands.argument("modifier", ResourceLocationArgument.id()).suggests(SUGGEST_MODIFIER).executes((var0x) -> {
+         return modifyEntityItem((CommandSourceStack)var0x.getSource(), EntityArgument.getEntities(var0x, "targets"), SlotArgument.getSlot(var0x, "slot"), ResourceLocationArgument.getItemModifier(var0x, "modifier"));
+      })))))));
    }
 
    private static int modifyBlockItem(CommandSourceStack var0, BlockPos var1, int var2, LootItemFunction var3) throws CommandSyntaxException {
       Container var4 = getContainer(var0, var1, ERROR_TARGET_NOT_A_CONTAINER);
       if (var2 >= 0 && var2 < var4.getContainerSize()) {
