--- net/minecraft/world/level/storage/loot/IntRange.java
+++ net/minecraft/world/level/storage/loot/IntRange.java
@@ -18,13 +18,13 @@
 import net.minecraft.world.level.storage.loot.providers.number.ConstantValue;
 import net.minecraft.world.level.storage.loot.providers.number.NumberProvider;
 
 public class IntRange {
    @Nullable
-   private final NumberProvider min;
+   final NumberProvider min;
    @Nullable
-   private final NumberProvider max;
+   final NumberProvider max;
    private final IntRange.IntLimiter limiter;
    private final IntRange.IntChecker predicate;
 
    public Set<LootContextParam<?>> getReferencedContextParams() {
       Builder var1 = ImmutableSet.builder();
@@ -37,11 +37,11 @@
       }
 
       return var1.build();
    }
 
-   private IntRange(@Nullable NumberProvider var1, @Nullable NumberProvider var2) {
+   IntRange(@Nullable NumberProvider var1, @Nullable NumberProvider var2) {
       this.min = var1;
       this.max = var2;
       if (var1 == null) {
          if (var2 == null) {
             this.limiter = (var0, var1x) -> {
@@ -99,10 +99,20 @@
 
    public boolean test(LootContext var1, int var2) {
       return this.predicate.test(var1, var2);
    }
 
+   @FunctionalInterface
+   private interface IntLimiter {
+      int apply(LootContext var1, int var2);
+   }
+
+   @FunctionalInterface
+   private interface IntChecker {
+      boolean test(LootContext var1, int var2);
+   }
+
    public static class Serializer implements JsonDeserializer<IntRange>, JsonSerializer<IntRange> {
       public Serializer() {
       }
 
       public IntRange deserialize(JsonElement var1, Type var2, JsonDeserializationContext var3) {
@@ -131,16 +141,6 @@
 
             return var4;
          }
       }
    }
-
-   @FunctionalInterface
-   interface IntLimiter {
-      int apply(LootContext var1, int var2);
-   }
-
-   @FunctionalInterface
-   interface IntChecker {
-      boolean test(LootContext var1, int var2);
-   }
 }
