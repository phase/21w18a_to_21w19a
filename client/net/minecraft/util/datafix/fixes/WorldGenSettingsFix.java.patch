--- net/minecraft/util/datafix/fixes/WorldGenSettingsFix.java
+++ net/minecraft/util/datafix/fixes/WorldGenSettingsFix.java
@@ -96,11 +96,11 @@
 
          switch(var9) {
          case 0:
             OptionalDynamic var10 = var0.get("generatorOptions");
             Map var11 = fixFlatStructures(var1, var10);
-            var4 = var0.createMap(ImmutableMap.of(var0.createString("type"), var0.createString("minecraft:flat"), var0.createString("settings"), var0.createMap(ImmutableMap.of(var0.createString("structures"), var0.createMap(var11), var0.createString("layers"), var10.get("layers").result().orElseGet(() -> {
+            var4 = var0.createMap(ImmutableMap.of(var0.createString("type"), var0.createString("minecraft:flat"), var0.createString("settings"), var0.createMap(ImmutableMap.of(var0.createString("structures"), var0.createMap(var11), var0.createString("layers"), (Dynamic)var10.get("layers").result().orElseGet(() -> {
                return var0.createList(Stream.of(var0.createMap(ImmutableMap.of(var0.createString("height"), var0.createInt(1), var0.createString("block"), var0.createString("minecraft:bedrock"))), var0.createMap(ImmutableMap.of(var0.createString("height"), var0.createInt(2), var0.createString("block"), var0.createString("minecraft:dirt"))), var0.createMap(ImmutableMap.of(var0.createString("height"), var0.createInt(1), var0.createString("block"), var0.createString("minecraft:grass_block")))));
             }), var0.createString("biome"), var0.createString(var10.get("biome").asString("minecraft:plains"))))));
             break;
          case 1:
             var4 = var0.createMap(ImmutableMap.of(var0.createString("type"), var0.createString("minecraft:debug")));
@@ -171,11 +171,11 @@
       MutableInt var4 = new MutableInt(128);
       MutableBoolean var5 = new MutableBoolean(false);
       HashMap var6 = Maps.newHashMap();
       if (!var1.result().isPresent()) {
          var5.setTrue();
-         var6.put("minecraft:village", DEFAULTS.get("minecraft:village"));
+         var6.put("minecraft:village", (WorldGenSettingsFix.StructureFeatureConfiguration)DEFAULTS.get("minecraft:village"));
       }
 
       var1.get("structures").flatMap(Dynamic::getMapValues).result().ifPresent((var5x) -> {
          var5x.forEach((var5xx, var6x) -> {
             var6x.getMapValues().result().ifPresent((var6xx) -> {
@@ -280,11 +280,11 @@
                         default:
                            return;
                         }
                      case 1:
                         if ("oceanmonument".equals(var8)) {
-                           WorldGenSettingsFix.StructureFeatureConfiguration var13 = (WorldGenSettingsFix.StructureFeatureConfiguration)var6.getOrDefault("minecraft:monument", DEFAULTS.get("minecraft:monument"));
+                           WorldGenSettingsFix.StructureFeatureConfiguration var13 = (WorldGenSettingsFix.StructureFeatureConfiguration)var6.getOrDefault("minecraft:monument", (WorldGenSettingsFix.StructureFeatureConfiguration)DEFAULTS.get("minecraft:monument"));
                            int var14 = getInt(var10, var13.separation, 1);
                            var6.put("minecraft:monument", new WorldGenSettingsFix.StructureFeatureConfiguration(var14, var13.separation, var13.salt));
                         }
 
                         return;
@@ -321,11 +321,11 @@
    private static int getInt(String var0, int var1, int var2) {
       return Math.max(var2, getInt(var0, var1));
    }
 
    private static void setSpacing(Map<String, WorldGenSettingsFix.StructureFeatureConfiguration> var0, String var1, String var2, int var3) {
-      WorldGenSettingsFix.StructureFeatureConfiguration var4 = (WorldGenSettingsFix.StructureFeatureConfiguration)var0.getOrDefault(var1, DEFAULTS.get(var1));
+      WorldGenSettingsFix.StructureFeatureConfiguration var4 = (WorldGenSettingsFix.StructureFeatureConfiguration)var0.getOrDefault(var1, (WorldGenSettingsFix.StructureFeatureConfiguration)DEFAULTS.get(var1));
       int var5 = getInt(var2, var4.spacing, var3);
       var0.put(var1, new WorldGenSettingsFix.StructureFeatureConfiguration(var5, var4.separation, var4.salt));
    }
 
    static final class StructureFeatureConfiguration {
@@ -336,13 +336,13 @@
             return var0x.separation;
          }), Codec.INT.fieldOf("salt").forGetter((var0x) -> {
             return var0x.salt;
          })).apply(var0, WorldGenSettingsFix.StructureFeatureConfiguration::new);
       });
-      private final int spacing;
-      private final int separation;
-      private final int salt;
+      final int spacing;
+      final int separation;
+      final int salt;
 
       public StructureFeatureConfiguration(int var1, int var2, int var3) {
          this.spacing = var1;
          this.separation = var2;
          this.salt = var3;
