--- net/minecraft/advancements/AdvancementProgress.java
+++ net/minecraft/advancements/AdvancementProgress.java
@@ -20,11 +20,11 @@
 import javax.annotation.Nullable;
 import net.minecraft.network.FriendlyByteBuf;
 import net.minecraft.util.GsonHelper;
 
 public class AdvancementProgress implements Comparable<AdvancementProgress> {
-   private final Map<String, CriterionProgress> criteria;
+   final Map<String, CriterionProgress> criteria;
    private String[][] requirements = new String[0][];
 
    private AdvancementProgress(Map<String, CriterionProgress> var1) {
       this.criteria = var1;
    }
@@ -115,11 +115,12 @@
          return false;
       }
    }
 
    public String toString() {
-      return "AdvancementProgress{criteria=" + this.criteria + ", requirements=" + Arrays.deepToString(this.requirements) + '}';
+      Map var10000 = this.criteria;
+      return "AdvancementProgress{criteria=" + var10000 + ", requirements=" + Arrays.deepToString(this.requirements) + "}";
    }
 
    public void serializeToNetwork(FriendlyByteBuf var1) {
       var1.writeMap(this.criteria, FriendlyByteBuf::writeUtf, (var0, var1x) -> {
          var1x.serializeToNetwork(var0);
@@ -194,11 +195,11 @@
       Iterator var2 = this.criteria.entrySet().iterator();
 
       while(var2.hasNext()) {
          Entry var3 = (Entry)var2.next();
          if (!((CriterionProgress)var3.getValue()).isDone()) {
-            var1.add(var3.getKey());
+            var1.add((String)var3.getKey());
          }
       }
 
       return var1;
    }
@@ -208,11 +209,11 @@
       Iterator var2 = this.criteria.entrySet().iterator();
 
       while(var2.hasNext()) {
          Entry var3 = (Entry)var2.next();
          if (((CriterionProgress)var3.getValue()).isDone()) {
-            var1.add(var3.getKey());
+            var1.add((String)var3.getKey());
          }
       }
 
       return var1;
    }
