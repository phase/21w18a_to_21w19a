--- com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen.java
+++ com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen.java
@@ -37,35 +37,35 @@
 import net.minecraft.resources.ResourceLocation;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
 public class RealmsSelectWorldTemplateScreen extends RealmsScreen {
-   private static final Logger LOGGER = LogManager.getLogger();
-   private static final ResourceLocation LINK_ICON = new ResourceLocation("realms", "textures/gui/realms/link_icons.png");
-   private static final ResourceLocation TRAILER_ICON = new ResourceLocation("realms", "textures/gui/realms/trailer_icons.png");
-   private static final ResourceLocation SLOT_FRAME_LOCATION = new ResourceLocation("realms", "textures/gui/realms/slot_frame.png");
-   private static final Component PUBLISHER_LINK_TOOLTIP = new TranslatableComponent("mco.template.info.tooltip");
-   private static final Component TRAILER_LINK_TOOLTIP = new TranslatableComponent("mco.template.trailer.tooltip");
+   static final Logger LOGGER = LogManager.getLogger();
+   static final ResourceLocation LINK_ICON = new ResourceLocation("realms", "textures/gui/realms/link_icons.png");
+   static final ResourceLocation TRAILER_ICON = new ResourceLocation("realms", "textures/gui/realms/trailer_icons.png");
+   static final ResourceLocation SLOT_FRAME_LOCATION = new ResourceLocation("realms", "textures/gui/realms/slot_frame.png");
+   static final Component PUBLISHER_LINK_TOOLTIP = new TranslatableComponent("mco.template.info.tooltip");
+   static final Component TRAILER_LINK_TOOLTIP = new TranslatableComponent("mco.template.trailer.tooltip");
    private final Consumer<WorldTemplate> callback;
-   private RealmsSelectWorldTemplateScreen.WorldTemplateObjectSelectionList worldTemplateObjectSelectionList;
-   private int selectedTemplate;
+   RealmsSelectWorldTemplateScreen.WorldTemplateObjectSelectionList worldTemplateObjectSelectionList;
+   int selectedTemplate;
    private Component title;
    private Button selectButton;
    private Button trailerButton;
    private Button publisherButton;
    @Nullable
-   private Component toolTip;
-   private String currentLink;
+   Component toolTip;
+   String currentLink;
    private final RealmsServer.WorldType worldType;
-   private int clicks;
+   int clicks;
    @Nullable
    private Component[] warning;
    private String warningURL;
-   private boolean displayWarning;
+   boolean displayWarning;
    private boolean hoverWarning;
    @Nullable
-   private List<TextRenderingUtils.Line> noTemplatesMessage;
+   List<TextRenderingUtils.Line> noTemplatesMessage;
 
    public RealmsSelectWorldTemplateScreen(Consumer<WorldTemplate> var1, RealmsServer.WorldType var2) {
       this(var1, var2, (WorldTemplatePaginatedList)null);
    }
 
@@ -130,11 +130,11 @@
       }
 
       NarrationHelper.now((Iterable)var3.filter(Objects::nonNull).map(Component::getString).collect(Collectors.toList()));
    }
 
-   private void updateButtonStates() {
+   void updateButtonStates() {
       this.publisherButton.visible = this.shouldPublisherBeVisible();
       this.trailerButton.visible = this.shouldTrailerBeVisible();
       this.selectButton.active = this.shouldSelectButtonBeActive();
    }
 
@@ -165,11 +165,11 @@
 
    public void onClose() {
       this.callback.accept((Object)null);
    }
 
-   private void selectTemplate() {
+   void selectTemplate() {
       if (this.hasValidTemplate()) {
          this.callback.accept(this.getSelectedTemplate());
       }
 
    }
@@ -239,11 +239,11 @@
 
          }
       }).start();
    }
 
-   private Either<WorldTemplatePaginatedList, String> fetchTemplates(WorldTemplatePaginatedList var1, RealmsClient var2) {
+   Either<WorldTemplatePaginatedList, String> fetchTemplates(WorldTemplatePaginatedList var1, RealmsClient var2) {
       try {
          return Either.left(var2.fetchWorldTemplates(var1.page + 1, var1.size, this.worldType));
       } catch (RealmsServiceException var4) {
          return Either.right(var4.getMessage());
       }
@@ -268,11 +268,11 @@
          for(var6 = 0; var6 < var5.length; ++var6) {
             int var7 = this.font.width((FormattedText)var5[var6]);
             var8 = this.width / 2 - var7 / 2;
             int var9 = row(-1 + var6);
             if (var2 >= var8 && var2 <= var8 + var7 && var3 >= var9) {
-               this.font.getClass();
+               Objects.requireNonNull(this.font);
                if (var3 <= var9 + 9) {
                   this.hoverWarning = true;
                }
             }
          }
@@ -328,89 +328,10 @@
          this.fillGradient(var1, var5 - 3, var6 - 3, var5 + var7 + 3, var6 + 8 + 3, -1073741824, -1073741824);
          this.font.drawShadow(var1, var2, (float)var5, (float)var6, 16777215);
       }
    }
 
-   class Entry extends ObjectSelectionList.Entry<RealmsSelectWorldTemplateScreen.Entry> {
-      private final WorldTemplate template;
-
-      public Entry(WorldTemplate var2) {
-         this.template = var2;
-      }
-
-      public void render(PoseStack var1, int var2, int var3, int var4, int var5, int var6, int var7, int var8, boolean var9, float var10) {
-         this.renderWorldTemplateItem(var1, this.template, var4, var3, var7, var8);
-      }
-
-      private void renderWorldTemplateItem(PoseStack var1, WorldTemplate var2, int var3, int var4, int var5, int var6) {
-         int var7 = var3 + 45 + 20;
-         RealmsSelectWorldTemplateScreen.this.font.draw(var1, var2.name, (float)var7, (float)(var4 + 2), 16777215);
-         RealmsSelectWorldTemplateScreen.this.font.draw(var1, var2.author, (float)var7, (float)(var4 + 15), 7105644);
-         RealmsSelectWorldTemplateScreen.this.font.draw(var1, var2.version, (float)(var7 + 227 - RealmsSelectWorldTemplateScreen.this.font.width(var2.version)), (float)(var4 + 1), 7105644);
-         if (!"".equals(var2.link) || !"".equals(var2.trailer) || !"".equals(var2.recommendedPlayers)) {
-            this.drawIcons(var1, var7 - 1, var4 + 25, var5, var6, var2.link, var2.trailer, var2.recommendedPlayers);
-         }
-
-         this.drawImage(var1, var3, var4 + 1, var5, var6, var2);
-      }
-
-      private void drawImage(PoseStack var1, int var2, int var3, int var4, int var5, WorldTemplate var6) {
-         RealmsTextureManager.bindWorldTemplate(var6.id, var6.image);
-         RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
-         GuiComponent.blit(var1, var2 + 1, var3 + 1, 0.0F, 0.0F, 38, 38, 38, 38);
-         RenderSystem.setShaderTexture(0, RealmsSelectWorldTemplateScreen.SLOT_FRAME_LOCATION);
-         RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
-         GuiComponent.blit(var1, var2, var3, 0.0F, 0.0F, 40, 40, 40, 40);
-      }
-
-      private void drawIcons(PoseStack var1, int var2, int var3, int var4, int var5, String var6, String var7, String var8) {
-         if (!"".equals(var8)) {
-            RealmsSelectWorldTemplateScreen.this.font.draw(var1, var8, (float)var2, (float)(var3 + 4), 5000268);
-         }
-
-         int var9 = "".equals(var8) ? 0 : RealmsSelectWorldTemplateScreen.this.font.width(var8) + 2;
-         boolean var10 = false;
-         boolean var11 = false;
-         boolean var12 = "".equals(var6);
-         if (var4 >= var2 + var9 && var4 <= var2 + var9 + 32 && var5 >= var3 && var5 <= var3 + 15 && var5 < RealmsSelectWorldTemplateScreen.this.height - 15 && var5 > 32) {
-            if (var4 <= var2 + 15 + var9 && var4 > var9) {
-               if (var12) {
-                  var11 = true;
-               } else {
-                  var10 = true;
-               }
-            } else if (!var12) {
-               var11 = true;
-            }
-         }
-
-         if (!var12) {
-            RenderSystem.setShaderTexture(0, RealmsSelectWorldTemplateScreen.LINK_ICON);
-            RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
-            float var13 = var10 ? 15.0F : 0.0F;
-            GuiComponent.blit(var1, var2 + var9, var3, var13, 0.0F, 15, 15, 30, 15);
-         }
-
-         if (!"".equals(var7)) {
-            RenderSystem.setShaderTexture(0, RealmsSelectWorldTemplateScreen.TRAILER_ICON);
-            RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
-            int var15 = var2 + var9 + (var12 ? 0 : 17);
-            float var14 = var11 ? 15.0F : 0.0F;
-            GuiComponent.blit(var1, var15, var3, var14, 0.0F, 15, 15, 30, 15);
-         }
-
-         if (var10) {
-            RealmsSelectWorldTemplateScreen.this.toolTip = RealmsSelectWorldTemplateScreen.PUBLISHER_LINK_TOOLTIP;
-            RealmsSelectWorldTemplateScreen.this.currentLink = var6;
-         } else if (var11 && !"".equals(var7)) {
-            RealmsSelectWorldTemplateScreen.this.toolTip = RealmsSelectWorldTemplateScreen.TRAILER_LINK_TOOLTIP;
-            RealmsSelectWorldTemplateScreen.this.currentLink = var7;
-         }
-
-      }
-   }
-
    class WorldTemplateObjectSelectionList extends RealmsObjectSelectionList<RealmsSelectWorldTemplateScreen.Entry> {
       public WorldTemplateObjectSelectionList() {
          this(Collections.emptyList());
       }
 
@@ -437,11 +358,12 @@
                this.itemClicked(var7, var8, var1, var3, this.width);
                if (var8 >= RealmsSelectWorldTemplateScreen.this.worldTemplateObjectSelectionList.getItemCount()) {
                   return super.mouseClicked(var1, var3, var5);
                }
 
-               RealmsSelectWorldTemplateScreen.this.clicks = RealmsSelectWorldTemplateScreen.this.clicks + 7;
+               RealmsSelectWorldTemplateScreen var10000 = RealmsSelectWorldTemplateScreen.this;
+               var10000.clicks += 7;
                if (RealmsSelectWorldTemplateScreen.this.clicks >= 10) {
                   RealmsSelectWorldTemplateScreen.this.selectTemplate();
                }
 
                return true;
@@ -498,6 +420,85 @@
          return (List)this.children().stream().map((var0) -> {
             return var0.template;
          }).collect(Collectors.toList());
       }
    }
+
+   private class Entry extends ObjectSelectionList.Entry<RealmsSelectWorldTemplateScreen.Entry> {
+      final WorldTemplate template;
+
+      public Entry(WorldTemplate var2) {
+         this.template = var2;
+      }
+
+      public void render(PoseStack var1, int var2, int var3, int var4, int var5, int var6, int var7, int var8, boolean var9, float var10) {
+         this.renderWorldTemplateItem(var1, this.template, var4, var3, var7, var8);
+      }
+
+      private void renderWorldTemplateItem(PoseStack var1, WorldTemplate var2, int var3, int var4, int var5, int var6) {
+         int var7 = var3 + 45 + 20;
+         RealmsSelectWorldTemplateScreen.this.font.draw(var1, var2.name, (float)var7, (float)(var4 + 2), 16777215);
+         RealmsSelectWorldTemplateScreen.this.font.draw(var1, var2.author, (float)var7, (float)(var4 + 15), 7105644);
+         RealmsSelectWorldTemplateScreen.this.font.draw(var1, var2.version, (float)(var7 + 227 - RealmsSelectWorldTemplateScreen.this.font.width(var2.version)), (float)(var4 + 1), 7105644);
+         if (!"".equals(var2.link) || !"".equals(var2.trailer) || !"".equals(var2.recommendedPlayers)) {
+            this.drawIcons(var1, var7 - 1, var4 + 25, var5, var6, var2.link, var2.trailer, var2.recommendedPlayers);
+         }
+
+         this.drawImage(var1, var3, var4 + 1, var5, var6, var2);
+      }
+
+      private void drawImage(PoseStack var1, int var2, int var3, int var4, int var5, WorldTemplate var6) {
+         RealmsTextureManager.bindWorldTemplate(var6.id, var6.image);
+         RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
+         GuiComponent.blit(var1, var2 + 1, var3 + 1, 0.0F, 0.0F, 38, 38, 38, 38);
+         RenderSystem.setShaderTexture(0, RealmsSelectWorldTemplateScreen.SLOT_FRAME_LOCATION);
+         RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
+         GuiComponent.blit(var1, var2, var3, 0.0F, 0.0F, 40, 40, 40, 40);
+      }
+
+      private void drawIcons(PoseStack var1, int var2, int var3, int var4, int var5, String var6, String var7, String var8) {
+         if (!"".equals(var8)) {
+            RealmsSelectWorldTemplateScreen.this.font.draw(var1, var8, (float)var2, (float)(var3 + 4), 5000268);
+         }
+
+         int var9 = "".equals(var8) ? 0 : RealmsSelectWorldTemplateScreen.this.font.width(var8) + 2;
+         boolean var10 = false;
+         boolean var11 = false;
+         boolean var12 = "".equals(var6);
+         if (var4 >= var2 + var9 && var4 <= var2 + var9 + 32 && var5 >= var3 && var5 <= var3 + 15 && var5 < RealmsSelectWorldTemplateScreen.this.height - 15 && var5 > 32) {
+            if (var4 <= var2 + 15 + var9 && var4 > var9) {
+               if (var12) {
+                  var11 = true;
+               } else {
+                  var10 = true;
+               }
+            } else if (!var12) {
+               var11 = true;
+            }
+         }
+
+         if (!var12) {
+            RenderSystem.setShaderTexture(0, RealmsSelectWorldTemplateScreen.LINK_ICON);
+            RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
+            float var13 = var10 ? 15.0F : 0.0F;
+            GuiComponent.blit(var1, var2 + var9, var3, var13, 0.0F, 15, 15, 30, 15);
+         }
+
+         if (!"".equals(var7)) {
+            RenderSystem.setShaderTexture(0, RealmsSelectWorldTemplateScreen.TRAILER_ICON);
+            RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
+            int var15 = var2 + var9 + (var12 ? 0 : 17);
+            float var14 = var11 ? 15.0F : 0.0F;
+            GuiComponent.blit(var1, var15, var3, var14, 0.0F, 15, 15, 30, 15);
+         }
+
+         if (var10) {
+            RealmsSelectWorldTemplateScreen.this.toolTip = RealmsSelectWorldTemplateScreen.PUBLISHER_LINK_TOOLTIP;
+            RealmsSelectWorldTemplateScreen.this.currentLink = var6;
+         } else if (var11 && !"".equals(var7)) {
+            RealmsSelectWorldTemplateScreen.this.toolTip = RealmsSelectWorldTemplateScreen.TRAILER_LINK_TOOLTIP;
+            RealmsSelectWorldTemplateScreen.this.currentLink = var7;
+         }
+
+      }
+   }
 }
