--- com/mojang/blaze3d/vertex/VertexConsumer.java
+++ com/mojang/blaze3d/vertex/VertexConsumer.java
@@ -68,65 +68,62 @@
       Matrix4f var15 = var1.pose();
       var14.transform(var1.normal());
       boolean var16 = true;
       int var17 = var12.length / 8;
       MemoryStack var18 = MemoryStack.stackPush();
-      Throwable var19 = null;
 
       try {
-         ByteBuffer var20 = var18.malloc(DefaultVertexFormat.BLOCK.getVertexSize());
-         IntBuffer var21 = var20.asIntBuffer();
+         ByteBuffer var19 = var18.malloc(DefaultVertexFormat.BLOCK.getVertexSize());
+         IntBuffer var20 = var19.asIntBuffer();
 
-         for(int var22 = 0; var22 < var17; ++var22) {
-            var21.clear();
-            var21.put(var12, var22 * 8, 8);
-            float var23 = var20.getFloat(0);
-            float var24 = var20.getFloat(4);
-            float var25 = var20.getFloat(8);
+         for(int var21 = 0; var21 < var17; ++var21) {
+            var20.clear();
+            var20.put(var12, var21 * 8, 8);
+            float var22 = var19.getFloat(0);
+            float var23 = var19.getFloat(4);
+            float var24 = var19.getFloat(8);
+            float var25;
             float var26;
             float var27;
-            float var28;
+            float var29;
             float var30;
-            float var31;
             if (var9) {
-               float var29 = (float)(var20.get(12) & 255) / 255.0F;
-               var30 = (float)(var20.get(13) & 255) / 255.0F;
-               var31 = (float)(var20.get(14) & 255) / 255.0F;
-               var26 = var29 * var10[var22] * var4;
-               var27 = var30 * var10[var22] * var5;
-               var28 = var31 * var10[var22] * var6;
+               float var28 = (float)(var19.get(12) & 255) / 255.0F;
+               var29 = (float)(var19.get(13) & 255) / 255.0F;
+               var30 = (float)(var19.get(14) & 255) / 255.0F;
+               var25 = var28 * var10[var21] * var4;
+               var26 = var29 * var10[var21] * var5;
+               var27 = var30 * var10[var21] * var6;
             } else {
-               var26 = var10[var22] * var4;
-               var27 = var10[var22] * var5;
-               var28 = var10[var22] * var6;
+               var25 = var10[var21] * var4;
+               var26 = var10[var21] * var5;
+               var27 = var10[var21] * var6;
             }
 
-            int var42 = var11[var22];
-            var30 = var20.getFloat(16);
-            var31 = var20.getFloat(20);
-            Vector4f var32 = new Vector4f(var23, var24, var25, 1.0F);
-            var32.transform(var15);
-            this.vertex(var32.x(), var32.y(), var32.z(), var26, var27, var28, 1.0F, var30, var31, var8, var42, var14.x(), var14.y(), var14.z());
+            int var34 = var11[var21];
+            var29 = var19.getFloat(16);
+            var30 = var19.getFloat(20);
+            Vector4f var31 = new Vector4f(var22, var23, var24, 1.0F);
+            var31.transform(var15);
+            this.vertex(var31.x(), var31.y(), var31.z(), var25, var26, var27, 1.0F, var29, var30, var8, var34, var14.x(), var14.y(), var14.z());
          }
-      } catch (Throwable var40) {
-         var19 = var40;
-         throw var40;
-      } finally {
+      } catch (Throwable var33) {
          if (var18 != null) {
-            if (var19 != null) {
-               try {
-                  var18.close();
-               } catch (Throwable var39) {
-                  var19.addSuppressed(var39);
-               }
-            } else {
+            try {
                var18.close();
+            } catch (Throwable var32) {
+               var33.addSuppressed(var32);
             }
          }
 
+         throw var33;
       }
 
+      if (var18 != null) {
+         var18.close();
+      }
+
    }
 
    default VertexConsumer vertex(Matrix4f var1, float var2, float var3, float var4) {
       Vector4f var5 = new Vector4f(var2, var3, var4, 1.0F);
       var5.transform(var1);
