--- com/mojang/blaze3d/preprocessor/GlslPreprocessor.java
+++ com/mojang/blaze3d/preprocessor/GlslPreprocessor.java
@@ -52,11 +52,11 @@
                if (!Strings.isEmpty(var13)) {
                   if (!StringUtil.endsWithNewLine(var13)) {
                      var13 = var13 + System.lineSeparator();
                   }
 
-                  var2.sourceId = var2.sourceId + 1;
+                  ++var2.sourceId;
                   var14 = var2.sourceId;
                   List var15 = this.processImports(var13, var2, var10 ? FileUtil.getFullResourcePath(var12) : "");
                   var15.set(0, String.format("#line %d %d\n%s", 0, var14, this.processVersions((String)var15.get(0), var2)));
                   if (!StringUtils.isBlank(var11)) {
                      var7.add(var11);
@@ -85,19 +85,25 @@
 
    private String processVersions(String var1, GlslPreprocessor.Context var2) {
       Matcher var3 = REGEX_VERSION.matcher(var1);
       if (var3.find() && isDirectiveEnabled(var1, var3)) {
          var2.glslVersion = Math.max(var2.glslVersion, Integer.parseInt(var3.group(2)));
-         return var1.substring(0, var3.start(1)) + "/*" + var1.substring(var3.start(1), var3.end(1)) + "*/" + var1.substring(var3.end(1));
+         String var10000 = var1.substring(0, var3.start(1));
+         return var10000 + "/*" + var1.substring(var3.start(1), var3.end(1)) + "*/" + var1.substring(var3.end(1));
       } else {
          return var1;
       }
    }
 
    private String setVersion(String var1, int var2) {
       Matcher var3 = REGEX_VERSION.matcher(var1);
-      return var3.find() && isDirectiveEnabled(var1, var3) ? var1.substring(0, var3.start(2)) + Math.max(var2, Integer.parseInt(var3.group(2))) + var1.substring(var3.end(2)) : var1;
+      if (var3.find() && isDirectiveEnabled(var1, var3)) {
+         String var10000 = var1.substring(0, var3.start(2));
+         return var10000 + Math.max(var2, Integer.parseInt(var3.group(2))) + var1.substring(var3.end(2));
+      } else {
+         return var1;
+      }
    }
 
    private static boolean isDirectiveEnabled(String var0, Matcher var1) {
       return !isDirectiveDisabled(var0, var1, 0);
    }
@@ -118,13 +124,13 @@
    }
 
    @Nullable
    public abstract String applyImport(boolean var1, String var2);
 
-   static final class Context {
-      private int glslVersion;
-      private int sourceId;
+   private static final class Context {
+      int glslVersion;
+      int sourceId;
 
-      private Context() {
+      Context() {
       }
    }
 }
