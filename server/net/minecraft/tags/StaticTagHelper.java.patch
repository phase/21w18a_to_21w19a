--- net/minecraft/tags/StaticTagHelper.java
+++ net/minecraft/tags/StaticTagHelper.java
@@ -3,10 +3,11 @@
 import com.google.common.collect.ImmutableSet;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
 import java.util.List;
 import java.util.Map;
+import java.util.Objects;
 import java.util.Set;
 import java.util.function.Function;
 import java.util.stream.Collectors;
 import javax.annotation.Nullable;
 import net.minecraft.core.Registry;
@@ -42,10 +43,11 @@
 
    public void reset(TagContainer var1) {
       TagCollection var2 = var1.getOrEmpty(this.key);
       this.source = var2;
       this.wrappers.forEach((var1x) -> {
+         Objects.requireNonNull(var2);
          var1x.rebind(var2::getTag);
       });
    }
 
    public TagCollection<T> getAllTags() {
@@ -71,16 +73,16 @@
       var1.add(this.key, TagCollection.of((Map)this.wrappers.stream().collect(Collectors.toMap(Tag.Named::getName, (var0) -> {
          return var0;
       }))));
    }
 
-   static class Wrapper<T> implements Tag.Named<T> {
+   private static class Wrapper<T> implements Tag.Named<T> {
       @Nullable
       private Tag<T> tag;
       protected final ResourceLocation name;
 
-      private Wrapper(ResourceLocation var1) {
+      Wrapper(ResourceLocation var1) {
          this.name = var1;
       }
 
       public ResourceLocation getName() {
          return this.name;
