--- net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction.java
+++ net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction.java
@@ -7,33 +7,36 @@
 import com.google.gson.JsonObject;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSyntaxException;
 import com.mojang.datafixers.util.Pair;
 import java.util.List;
+import java.util.Objects;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.ListTag;
 import net.minecraft.util.GsonHelper;
 import net.minecraft.world.item.DyeColor;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.block.entity.BannerPattern;
 import net.minecraft.world.level.storage.loot.LootContext;
 import net.minecraft.world.level.storage.loot.predicates.LootItemCondition;
 
 public class SetBannerPatternFunction extends LootItemConditionalFunction {
-   private final List<Pair<BannerPattern, DyeColor>> patterns;
-   private final boolean append;
+   final List<Pair<BannerPattern, DyeColor>> patterns;
+   final boolean append;
 
-   private SetBannerPatternFunction(LootItemCondition[] var1, List<Pair<BannerPattern, DyeColor>> var2, boolean var3) {
+   SetBannerPatternFunction(LootItemCondition[] var1, List<Pair<BannerPattern, DyeColor>> var2, boolean var3) {
       super(var1);
       this.patterns = var2;
       this.append = var3;
    }
 
    protected ItemStack run(ItemStack var1, LootContext var2) {
       CompoundTag var3 = var1.getOrCreateTagElement("BlockEntityTag");
       BannerPattern.Builder var4 = new BannerPattern.Builder();
-      this.patterns.forEach(var4::addPattern);
+      List var10000 = this.patterns;
+      Objects.requireNonNull(var4);
+      var10000.forEach(var4::addPattern);
       ListTag var5 = var4.toListTag();
       ListTag var6;
       if (this.append) {
          var6 = var3.getList("Patterns", 10).copy();
          var6.addAll(var5);
@@ -51,10 +54,32 @@
 
    public static SetBannerPatternFunction.Builder setBannerPattern(boolean var0) {
       return new SetBannerPatternFunction.Builder(var0);
    }
 
+   public static class Builder extends LootItemConditionalFunction.Builder<SetBannerPatternFunction.Builder> {
+      private final ImmutableList.Builder<Pair<BannerPattern, DyeColor>> patterns = ImmutableList.builder();
+      private final boolean append;
+
+      Builder(boolean var1) {
+         this.append = var1;
+      }
+
+      protected SetBannerPatternFunction.Builder getThis() {
+         return this;
+      }
+
+      public LootItemFunction build() {
+         return new SetBannerPatternFunction(this.getConditions(), this.patterns.build(), this.append);
+      }
+
+      public SetBannerPatternFunction.Builder addPattern(BannerPattern var1, DyeColor var2) {
+         this.patterns.add((Object)Pair.of(var1, var2));
+         return this;
+      }
+   }
+
    public static class Serializer extends LootItemConditionalFunction.Serializer<SetBannerPatternFunction> {
       public Serializer() {
       }
 
       public void serialize(JsonObject var1, SetBannerPatternFunction var2, JsonSerializationContext var3) {
@@ -93,29 +118,6 @@
 
          boolean var12 = GsonHelper.getAsBoolean(var1, "append");
          return new SetBannerPatternFunction(var3, var4.build(), var12);
       }
    }
-
-   public static class Builder extends LootItemConditionalFunction.Builder<SetBannerPatternFunction.Builder> {
-      private final ImmutableList.Builder<Pair<BannerPattern, DyeColor>> patterns;
-      private final boolean append;
-
-      private Builder(boolean var1) {
-         this.patterns = ImmutableList.builder();
-         this.append = var1;
-      }
-
-      protected SetBannerPatternFunction.Builder getThis() {
-         return this;
-      }
-
-      public LootItemFunction build() {
-         return new SetBannerPatternFunction(this.getConditions(), this.patterns.build(), this.append);
-      }
-
-      public SetBannerPatternFunction.Builder addPattern(BannerPattern var1, DyeColor var2) {
-         this.patterns.add((Object)Pair.of(var1, var2));
-         return this;
-      }
-   }
 }
