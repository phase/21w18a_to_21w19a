--- net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction.java
+++ net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction.java
@@ -28,13 +28,13 @@
 import net.minecraft.world.level.storage.loot.parameters.LootContextParam;
 import net.minecraft.world.level.storage.loot.predicates.LootItemCondition;
 import net.minecraft.world.level.storage.loot.providers.number.NumberProvider;
 
 public class SetStewEffectFunction extends LootItemConditionalFunction {
-   private final Map<MobEffect, NumberProvider> effectDurationMap;
+   final Map<MobEffect, NumberProvider> effectDurationMap;
 
-   private SetStewEffectFunction(LootItemCondition[] var1, Map<MobEffect, NumberProvider> var2) {
+   SetStewEffectFunction(LootItemCondition[] var1, Map<MobEffect, NumberProvider> var2) {
       super(var1);
       this.effectDurationMap = ImmutableMap.copyOf(var2);
    }
 
    public LootItemFunctionType getType() {
@@ -67,10 +67,30 @@
 
    public static SetStewEffectFunction.Builder stewEffect() {
       return new SetStewEffectFunction.Builder();
    }
 
+   public static class Builder extends LootItemConditionalFunction.Builder<SetStewEffectFunction.Builder> {
+      private final Map<MobEffect, NumberProvider> effectDurationMap = Maps.newHashMap();
+
+      public Builder() {
+      }
+
+      protected SetStewEffectFunction.Builder getThis() {
+         return this;
+      }
+
+      public SetStewEffectFunction.Builder withEffect(MobEffect var1, NumberProvider var2) {
+         this.effectDurationMap.put(var1, var2);
+         return this;
+      }
+
+      public LootItemFunction build() {
+         return new SetStewEffectFunction(this.getConditions(), this.effectDurationMap);
+      }
+   }
+
    public static class Serializer extends LootItemConditionalFunction.Serializer<SetStewEffectFunction> {
       public Serializer() {
       }
 
       public void serialize(JsonObject var1, SetStewEffectFunction var2, JsonSerializationContext var3) {
@@ -115,26 +135,6 @@
          }
 
          return new SetStewEffectFunction(var3, var4);
       }
    }
-
-   public static class Builder extends LootItemConditionalFunction.Builder<SetStewEffectFunction.Builder> {
-      private final Map<MobEffect, NumberProvider> effectDurationMap = Maps.newHashMap();
-
-      public Builder() {
-      }
-
-      protected SetStewEffectFunction.Builder getThis() {
-         return this;
-      }
-
-      public SetStewEffectFunction.Builder withEffect(MobEffect var1, NumberProvider var2) {
-         this.effectDurationMap.put(var1, var2);
-         return this;
-      }
-
-      public LootItemFunction build() {
-         return new SetStewEffectFunction(this.getConditions(), this.effectDurationMap);
-      }
-   }
 }
