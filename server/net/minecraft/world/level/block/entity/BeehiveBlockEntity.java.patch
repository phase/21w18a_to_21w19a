--- net/minecraft/world/level/block/entity/BeehiveBlockEntity.java
+++ net/minecraft/world/level/block/entity/BeehiveBlockEntity.java
@@ -220,11 +220,11 @@
             }
          }
       }
    }
 
-   private static void removeIgnoredBeeTags(CompoundTag var0) {
+   static void removeIgnoredBeeTags(CompoundTag var0) {
       Iterator var1 = IGNORED_BEE_TAGS.iterator();
 
       while(var1.hasNext()) {
          String var2 = (String)var1.next();
          var0.remove(var2);
@@ -247,11 +247,11 @@
       return this.savedFlowerPos != null;
    }
 
    private static void tickOccupants(Level var0, BlockPos var1, BlockState var2, List<BeehiveBlockEntity.BeeData> var3, @Nullable BlockPos var4) {
       BeehiveBlockEntity.BeeData var6;
-      for(Iterator var5 = var3.iterator(); var5.hasNext(); var6.ticksInHive++) {
+      for(Iterator var5 = var3.iterator(); var5.hasNext(); ++var6.ticksInHive) {
          var6 = (BeehiveBlockEntity.BeeData)var5.next();
          if (var6.ticksInHive > var6.minOccupationTicks) {
             BeehiveBlockEntity.BeeReleaseStatus var7 = var6.entityData.getBoolean("HasNectar") ? BeehiveBlockEntity.BeeReleaseStatus.HONEY_DELIVERED : BeehiveBlockEntity.BeeReleaseStatus.BEE_RELEASED;
             if (releaseOccupant(var0, var1, var2, var6, (List)null, var7, var4)) {
                var5.remove();
@@ -316,27 +316,27 @@
       }
 
       return var1;
    }
 
-   static class BeeData {
-      private final CompoundTag entityData;
-      private int ticksInHive;
-      private final int minOccupationTicks;
-
-      private BeeData(CompoundTag var1, int var2, int var3) {
-         BeehiveBlockEntity.removeIgnoredBeeTags(var1);
-         this.entityData = var1;
-         this.ticksInHive = var2;
-         this.minOccupationTicks = var3;
-      }
-   }
-
    public static enum BeeReleaseStatus {
       HONEY_DELIVERED,
       BEE_RELEASED,
       EMERGENCY;
 
       private BeeReleaseStatus() {
       }
    }
+
+   static class BeeData {
+      final CompoundTag entityData;
+      int ticksInHive;
+      final int minOccupationTicks;
+
+      BeeData(CompoundTag var1, int var2, int var3) {
+         BeehiveBlockEntity.removeIgnoredBeeTags(var1);
+         this.entityData = var1;
+         this.ticksInHive = var2;
+         this.minOccupationTicks = var3;
+      }
+   }
 }
