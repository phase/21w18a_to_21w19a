--- net/minecraft/world/level/block/entity/BeaconBlockEntity.java
+++ net/minecraft/world/level/block/entity/BeaconBlockEntity.java
@@ -45,18 +45,18 @@
    public static final int DATA_LEVELS = 0;
    public static final int DATA_PRIMARY = 1;
    public static final int DATA_SECONDARY = 2;
    public static final int NUM_DATA_VALUES = 3;
    private static final int BLOCKS_CHECK_PER_TICK = 10;
-   private List<BeaconBlockEntity.BeaconBeamSection> beamSections = Lists.newArrayList();
+   List<BeaconBlockEntity.BeaconBeamSection> beamSections = Lists.newArrayList();
    private List<BeaconBlockEntity.BeaconBeamSection> checkingBeamSections = Lists.newArrayList();
-   private int levels;
+   int levels;
    private int lastCheckY;
    @Nullable
-   private MobEffect primaryPower;
+   MobEffect primaryPower;
    @Nullable
-   private MobEffect secondaryPower;
+   MobEffect secondaryPower;
    @Nullable
    private Component name;
    private LockCode lockKey;
    private final ContainerData dataAccess;
 
@@ -262,11 +262,11 @@
    public CompoundTag getUpdateTag() {
       return this.save(new CompoundTag());
    }
 
    @Nullable
-   private static MobEffect getValidEffectById(int var0) {
+   static MobEffect getValidEffectById(int var0) {
       MobEffect var1 = MobEffect.byId(var0);
       return VALID_EFFECTS.contains(var1) ? var1 : null;
    }
 
    public void load(CompoundTag var1) {
@@ -315,11 +315,11 @@
       BEACON_EFFECTS = new MobEffect[][]{{MobEffects.MOVEMENT_SPEED, MobEffects.DIG_SPEED}, {MobEffects.DAMAGE_RESISTANCE, MobEffects.JUMP}, {MobEffects.DAMAGE_BOOST}, {MobEffects.REGENERATION}};
       VALID_EFFECTS = (Set)Arrays.stream(BEACON_EFFECTS).flatMap(Arrays::stream).collect(Collectors.toSet());
    }
 
    public static class BeaconBeamSection {
-      private final float[] color;
+      final float[] color;
       private int height;
 
       public BeaconBeamSection(float[] var1) {
          this.color = var1;
          this.height = 1;
