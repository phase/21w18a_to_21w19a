--- net/minecraft/world/level/levelgen/WorldGenSettings.java
+++ net/minecraft/world/level/levelgen/WorldGenSettings.java
@@ -123,11 +123,11 @@
 
       while(var4.hasNext()) {
          Entry var5 = (Entry)var4.next();
          ResourceKey var6 = (ResourceKey)var5.getKey();
          if (var6 != LevelStem.OVERWORLD) {
-            var3.register(var6, var5.getValue(), var0.lifecycle(var5.getValue()));
+            var3.register(var6, (LevelStem)var5.getValue(), var0.lifecycle((LevelStem)var5.getValue()));
          }
       }
 
       return var3;
    }
@@ -231,11 +231,11 @@
       case 0:
          JsonObject var16 = !var2.isEmpty() ? GsonHelper.parse(var2) : new JsonObject();
          Dynamic var17 = new Dynamic(JsonOps.INSTANCE, var16);
          DataResult var10009 = FlatLevelGeneratorSettings.CODEC.parse(var17);
          Logger var10010 = LOGGER;
-         var10010.getClass();
+         Objects.requireNonNull(var10010);
          return new WorldGenSettings(var8, var5, false, withOverworld((Registry)var19, (MappedRegistry)var13, new FlatLevelSource((FlatLevelGeneratorSettings)var10009.resultOrPartial(var10010::error).orElseGet(() -> {
             return FlatLevelGeneratorSettings.getDefault(var11);
          }))));
       case 1:
          return new WorldGenSettings(var8, var5, false, withOverworld((Registry)var19, (MappedRegistry)var13, new DebugLevelSource(var11)));
@@ -261,11 +261,11 @@
          Iterator var9 = this.dimensions.entrySet().iterator();
 
          while(var9.hasNext()) {
             Entry var10 = (Entry)var9.next();
             ResourceKey var11 = (ResourceKey)var10.getKey();
-            var6.register(var11, new LevelStem(((LevelStem)var10.getValue()).typeSupplier(), ((LevelStem)var10.getValue()).generator().withSeed(var7)), this.dimensions.lifecycle(var10.getValue()));
+            var6.register(var11, new LevelStem(((LevelStem)var10.getValue()).typeSupplier(), ((LevelStem)var10.getValue()).generator().withSeed(var7)), this.dimensions.lifecycle((LevelStem)var10.getValue()));
          }
       } else {
          var6 = this.dimensions;
       }
 
