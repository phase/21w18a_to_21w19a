--- net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces.java
+++ net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces.java
@@ -47,148 +47,10 @@
       var1.setSeed(var2);
       WoodlandMansionPieces.MansionGrid var4 = new WoodlandMansionPieces.MansionGrid(var1);
       var4.print();
    }
 
-   static class ThirdFloorRoomCollection extends WoodlandMansionPieces.SecondFloorRoomCollection {
-      private ThirdFloorRoomCollection() {
-         super(null);
-      }
-   }
-
-   static class SecondFloorRoomCollection extends WoodlandMansionPieces.FloorRoomCollection {
-      private SecondFloorRoomCollection() {
-         super(null);
-      }
-
-      public String get1x1(Random var1) {
-         return "1x1_b" + (var1.nextInt(4) + 1);
-      }
-
-      public String get1x1Secret(Random var1) {
-         return "1x1_as" + (var1.nextInt(4) + 1);
-      }
-
-      public String get1x2SideEntrance(Random var1, boolean var2) {
-         return var2 ? "1x2_c_stairs" : "1x2_c" + (var1.nextInt(4) + 1);
-      }
-
-      public String get1x2FrontEntrance(Random var1, boolean var2) {
-         return var2 ? "1x2_d_stairs" : "1x2_d" + (var1.nextInt(5) + 1);
-      }
-
-      public String get1x2Secret(Random var1) {
-         return "1x2_se" + (var1.nextInt(1) + 1);
-      }
-
-      public String get2x2(Random var1) {
-         return "2x2_b" + (var1.nextInt(5) + 1);
-      }
-
-      public String get2x2Secret(Random var1) {
-         return "2x2_s1";
-      }
-   }
-
-   static class FirstFloorRoomCollection extends WoodlandMansionPieces.FloorRoomCollection {
-      private FirstFloorRoomCollection() {
-         super(null);
-      }
-
-      public String get1x1(Random var1) {
-         return "1x1_a" + (var1.nextInt(5) + 1);
-      }
-
-      public String get1x1Secret(Random var1) {
-         return "1x1_as" + (var1.nextInt(4) + 1);
-      }
-
-      public String get1x2SideEntrance(Random var1, boolean var2) {
-         return "1x2_a" + (var1.nextInt(9) + 1);
-      }
-
-      public String get1x2FrontEntrance(Random var1, boolean var2) {
-         return "1x2_b" + (var1.nextInt(5) + 1);
-      }
-
-      public String get1x2Secret(Random var1) {
-         return "1x2_s" + (var1.nextInt(2) + 1);
-      }
-
-      public String get2x2(Random var1) {
-         return "2x2_a" + (var1.nextInt(4) + 1);
-      }
-
-      public String get2x2Secret(Random var1) {
-         return "2x2_s1";
-      }
-   }
-
-   abstract static class FloorRoomCollection {
-      private FloorRoomCollection() {
-      }
-
-      public abstract String get1x1(Random var1);
-
-      public abstract String get1x1Secret(Random var1);
-
-      public abstract String get1x2SideEntrance(Random var1, boolean var2);
-
-      public abstract String get1x2FrontEntrance(Random var1, boolean var2);
-
-      public abstract String get1x2Secret(Random var1);
-
-      public abstract String get2x2(Random var1);
-
-      public abstract String get2x2Secret(Random var1);
-   }
-
-   static class SimpleGrid {
-      private final int[][] grid;
-      private final int width;
-      private final int height;
-      private final int valueIfOutside;
-
-      public SimpleGrid(int var1, int var2, int var3) {
-         this.width = var1;
-         this.height = var2;
-         this.valueIfOutside = var3;
-         this.grid = new int[var1][var2];
-      }
-
-      public void set(int var1, int var2, int var3) {
-         if (var1 >= 0 && var1 < this.width && var2 >= 0 && var2 < this.height) {
-            this.grid[var1][var2] = var3;
-         }
-
-      }
-
-      public void set(int var1, int var2, int var3, int var4, int var5) {
-         for(int var6 = var2; var6 <= var4; ++var6) {
-            for(int var7 = var1; var7 <= var3; ++var7) {
-               this.set(var7, var6, var5);
-            }
-         }
-
-      }
-
-      public int get(int var1, int var2) {
-         return var1 >= 0 && var1 < this.width && var2 >= 0 && var2 < this.height ? this.grid[var1][var2] : this.valueIfOutside;
-      }
-
-      public void setif(int var1, int var2, int var3, int var4) {
-         if (this.get(var1, var2) == var3) {
-            this.set(var1, var2, var4);
-         }
-
-      }
-
-      public boolean edgesTo(int var1, int var2, int var3) {
-         return this.get(var1 - 1, var2) == var3 || this.get(var1 + 1, var2) == var3 || this.get(var1, var2 + 1) == var3 || this.get(var1, var2 - 1) == var3;
-      }
-   }
-
    static class MansionGrid {
       private static final int DEFAULT_SIZE = 11;
       private static final int CLEAR = 0;
       private static final int CORRIDOR = 1;
       private static final int ROOM = 2;
@@ -203,15 +65,15 @@
       private static final int ROOM_STAIRS_FLAG = 4194304;
       private static final int ROOM_CORRIDOR_FLAG = 8388608;
       private static final int ROOM_TYPE_MASK = 983040;
       private static final int ROOM_ID_MASK = 65535;
       private final Random random;
-      private final WoodlandMansionPieces.SimpleGrid baseGrid;
-      private final WoodlandMansionPieces.SimpleGrid thirdFloorGrid;
-      private final WoodlandMansionPieces.SimpleGrid[] floorRooms;
-      private final int entranceX;
-      private final int entranceY;
+      final WoodlandMansionPieces.SimpleGrid baseGrid;
+      final WoodlandMansionPieces.SimpleGrid thirdFloorGrid;
+      final WoodlandMansionPieces.SimpleGrid[] floorRooms;
+      final int entranceX;
+      final int entranceY;
 
       public MansionGrid(Random var1) {
          this.random = var1;
          boolean var2 = true;
          this.entranceX = 7;
@@ -520,11 +382,11 @@
          }
 
       }
    }
 
-   static class MansionPiecePlacer {
+   private static class MansionPiecePlacer {
       private final StructureManager structureManager;
       private final Random random;
       private int startX;
       private int startY;
 
@@ -1022,16 +884,171 @@
          BlockPos var5 = var2.relative((Direction)var3.rotate(Direction.EAST), 1);
          var1.add(new WoodlandMansionPieces.WoodlandMansionPiece(this.structureManager, var4.get2x2Secret(this.random), var5, var3, Mirror.NONE));
       }
    }
 
+   static class ThirdFloorRoomCollection extends WoodlandMansionPieces.SecondFloorRoomCollection {
+      ThirdFloorRoomCollection() {
+      }
+   }
+
+   static class SecondFloorRoomCollection extends WoodlandMansionPieces.FloorRoomCollection {
+      SecondFloorRoomCollection() {
+      }
+
+      public String get1x1(Random var1) {
+         int var10000 = var1.nextInt(4);
+         return "1x1_b" + (var10000 + 1);
+      }
+
+      public String get1x1Secret(Random var1) {
+         int var10000 = var1.nextInt(4);
+         return "1x1_as" + (var10000 + 1);
+      }
+
+      public String get1x2SideEntrance(Random var1, boolean var2) {
+         if (var2) {
+            return "1x2_c_stairs";
+         } else {
+            int var10000 = var1.nextInt(4);
+            return "1x2_c" + (var10000 + 1);
+         }
+      }
+
+      public String get1x2FrontEntrance(Random var1, boolean var2) {
+         if (var2) {
+            return "1x2_d_stairs";
+         } else {
+            int var10000 = var1.nextInt(5);
+            return "1x2_d" + (var10000 + 1);
+         }
+      }
+
+      public String get1x2Secret(Random var1) {
+         int var10000 = var1.nextInt(1);
+         return "1x2_se" + (var10000 + 1);
+      }
+
+      public String get2x2(Random var1) {
+         int var10000 = var1.nextInt(5);
+         return "2x2_b" + (var10000 + 1);
+      }
+
+      public String get2x2Secret(Random var1) {
+         return "2x2_s1";
+      }
+   }
+
+   static class FirstFloorRoomCollection extends WoodlandMansionPieces.FloorRoomCollection {
+      FirstFloorRoomCollection() {
+      }
+
+      public String get1x1(Random var1) {
+         int var10000 = var1.nextInt(5);
+         return "1x1_a" + (var10000 + 1);
+      }
+
+      public String get1x1Secret(Random var1) {
+         int var10000 = var1.nextInt(4);
+         return "1x1_as" + (var10000 + 1);
+      }
+
+      public String get1x2SideEntrance(Random var1, boolean var2) {
+         int var10000 = var1.nextInt(9);
+         return "1x2_a" + (var10000 + 1);
+      }
+
+      public String get1x2FrontEntrance(Random var1, boolean var2) {
+         int var10000 = var1.nextInt(5);
+         return "1x2_b" + (var10000 + 1);
+      }
+
+      public String get1x2Secret(Random var1) {
+         int var10000 = var1.nextInt(2);
+         return "1x2_s" + (var10000 + 1);
+      }
+
+      public String get2x2(Random var1) {
+         int var10000 = var1.nextInt(4);
+         return "2x2_a" + (var10000 + 1);
+      }
+
+      public String get2x2Secret(Random var1) {
+         return "2x2_s1";
+      }
+   }
+
+   private abstract static class FloorRoomCollection {
+      FloorRoomCollection() {
+      }
+
+      public abstract String get1x1(Random var1);
+
+      public abstract String get1x1Secret(Random var1);
+
+      public abstract String get1x2SideEntrance(Random var1, boolean var2);
+
+      public abstract String get1x2FrontEntrance(Random var1, boolean var2);
+
+      public abstract String get1x2Secret(Random var1);
+
+      public abstract String get2x2(Random var1);
+
+      public abstract String get2x2Secret(Random var1);
+   }
+
+   static class SimpleGrid {
+      private final int[][] grid;
+      final int width;
+      final int height;
+      private final int valueIfOutside;
+
+      public SimpleGrid(int var1, int var2, int var3) {
+         this.width = var1;
+         this.height = var2;
+         this.valueIfOutside = var3;
+         this.grid = new int[var1][var2];
+      }
+
+      public void set(int var1, int var2, int var3) {
+         if (var1 >= 0 && var1 < this.width && var2 >= 0 && var2 < this.height) {
+            this.grid[var1][var2] = var3;
+         }
+
+      }
+
+      public void set(int var1, int var2, int var3, int var4, int var5) {
+         for(int var6 = var2; var6 <= var4; ++var6) {
+            for(int var7 = var1; var7 <= var3; ++var7) {
+               this.set(var7, var6, var5);
+            }
+         }
+
+      }
+
+      public int get(int var1, int var2) {
+         return var1 >= 0 && var1 < this.width && var2 >= 0 && var2 < this.height ? this.grid[var1][var2] : this.valueIfOutside;
+      }
+
+      public void setif(int var1, int var2, int var3, int var4) {
+         if (this.get(var1, var2) == var3) {
+            this.set(var1, var2, var4);
+         }
+
+      }
+
+      public boolean edgesTo(int var1, int var2, int var3) {
+         return this.get(var1 - 1, var2) == var3 || this.get(var1 + 1, var2) == var3 || this.get(var1, var2 + 1) == var3 || this.get(var1, var2 - 1) == var3;
+      }
+   }
+
    static class PlacementData {
       public Rotation rotation;
       public BlockPos position;
       public String wallType;
 
-      private PlacementData() {
+      PlacementData() {
       }
    }
 
    public static class WoodlandMansionPiece extends TemplateStructurePiece {
       public WoodlandMansionPiece(StructureManager var1, String var2, BlockPos var3, Rotation var4) {
