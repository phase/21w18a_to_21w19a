--- net/minecraft/world/item/Items.java
+++ net/minecraft/world/item/Items.java
@@ -1,7 +1,8 @@
 package net.minecraft.world.item;
 
+import java.util.Optional;
 import net.minecraft.core.Registry;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.EquipmentSlot;
@@ -76,15 +77,47 @@
    public static final Item COAL_BLOCK;
    public static final Item RAW_IRON_BLOCK;
    public static final Item RAW_COPPER_BLOCK;
    public static final Item RAW_GOLD_BLOCK;
    public static final Item AMETHYST_BLOCK;
+   public static final Item BUDDING_AMETHYST;
    public static final Item IRON_BLOCK;
    public static final Item COPPER_BLOCK;
    public static final Item GOLD_BLOCK;
    public static final Item DIAMOND_BLOCK;
    public static final Item NETHERITE_BLOCK;
+   public static final Item EXPOSED_COPPER;
+   public static final Item WEATHERED_COPPER;
+   public static final Item OXIDIZED_COPPER;
+   public static final Item CUT_COPPER;
+   public static final Item EXPOSED_CUT_COPPER;
+   public static final Item WEATHERED_CUT_COPPER;
+   public static final Item OXIDIZED_CUT_COPPER;
+   public static final Item CUT_COPPER_STAIRS;
+   public static final Item EXPOSED_CUT_COPPER_STAIRS;
+   public static final Item WEATHERED_CUT_COPPER_STAIRS;
+   public static final Item OXIDIZED_CUT_COPPER_STAIRS;
+   public static final Item CUT_COPPER_SLAB;
+   public static final Item EXPOSED_CUT_COPPER_SLAB;
+   public static final Item WEATHERED_CUT_COPPER_SLAB;
+   public static final Item OXIDIZED_CUT_COPPER_SLAB;
+   public static final Item WAXED_COPPER_BLOCK;
+   public static final Item WAXED_EXPOSED_COPPER;
+   public static final Item WAXED_WEATHERED_COPPER;
+   public static final Item WAXED_OXIDIZED_COPPER;
+   public static final Item WAXED_CUT_COPPER;
+   public static final Item WAXED_EXPOSED_CUT_COPPER;
+   public static final Item WAXED_WEATHERED_CUT_COPPER;
+   public static final Item WAXED_OXIDIZED_CUT_COPPER;
+   public static final Item WAXED_CUT_COPPER_STAIRS;
+   public static final Item WAXED_EXPOSED_CUT_COPPER_STAIRS;
+   public static final Item WAXED_WEATHERED_CUT_COPPER_STAIRS;
+   public static final Item WAXED_OXIDIZED_CUT_COPPER_STAIRS;
+   public static final Item WAXED_CUT_COPPER_SLAB;
+   public static final Item WAXED_EXPOSED_CUT_COPPER_SLAB;
+   public static final Item WAXED_WEATHERED_CUT_COPPER_SLAB;
+   public static final Item WAXED_OXIDIZED_CUT_COPPER_SLAB;
    public static final Item OAK_LOG;
    public static final Item SPRUCE_LOG;
    public static final Item BIRCH_LOG;
    public static final Item JUNGLE_LOG;
    public static final Item ACACIA_LOG;
@@ -166,13 +199,13 @@
    public static final Item ORANGE_TULIP;
    public static final Item WHITE_TULIP;
    public static final Item PINK_TULIP;
    public static final Item OXEYE_DAISY;
    public static final Item CORNFLOWER;
-   public static final Item SPORE_BLOSSOM;
    public static final Item LILY_OF_THE_VALLEY;
    public static final Item WITHER_ROSE;
+   public static final Item SPORE_BLOSSOM;
    public static final Item BROWN_MUSHROOM;
    public static final Item RED_MUSHROOM;
    public static final Item CRIMSON_FUNGUS;
    public static final Item WARPED_FUNGUS;
    public static final Item CRIMSON_ROOTS;
@@ -652,10 +685,14 @@
    public static final Item BOW;
    public static final Item ARROW;
    public static final Item COAL;
    public static final Item CHARCOAL;
    public static final Item DIAMOND;
+   public static final Item EMERALD;
+   public static final Item LAPIS_LAZULI;
+   public static final Item QUARTZ;
+   public static final Item AMETHYST_SHARD;
    public static final Item RAW_IRON;
    public static final Item IRON_INGOT;
    public static final Item RAW_COPPER;
    public static final Item COPPER_INGOT;
    public static final Item RAW_GOLD;
@@ -764,21 +801,21 @@
    public static final Item EGG;
    public static final Item COMPASS;
    public static final Item BUNDLE;
    public static final Item FISHING_ROD;
    public static final Item CLOCK;
+   public static final Item SPYGLASS;
    public static final Item GLOWSTONE_DUST;
    public static final Item COD;
    public static final Item SALMON;
    public static final Item TROPICAL_FISH;
    public static final Item PUFFERFISH;
    public static final Item COOKED_COD;
    public static final Item COOKED_SALMON;
    public static final Item INK_SAC;
    public static final Item GLOW_INK_SAC;
    public static final Item COCOA_BEANS;
-   public static final Item LAPIS_LAZULI;
    public static final Item WHITE_DYE;
    public static final Item ORANGE_DYE;
    public static final Item MAGENTA_DYE;
    public static final Item LIGHT_BLUE_DYE;
    public static final Item YELLOW_DYE;
@@ -909,11 +946,10 @@
    public static final Item ZOMBIFIED_PIGLIN_SPAWN_EGG;
    public static final Item EXPERIENCE_BOTTLE;
    public static final Item FIRE_CHARGE;
    public static final Item WRITABLE_BOOK;
    public static final Item WRITTEN_BOOK;
-   public static final Item EMERALD;
    public static final Item ITEM_FRAME;
    public static final Item GLOW_ITEM_FRAME;
    public static final Item FLOWER_POT;
    public static final Item CARROT;
    public static final Item POTATO;
@@ -933,11 +969,10 @@
    public static final Item PUMPKIN_PIE;
    public static final Item FIREWORK_ROCKET;
    public static final Item FIREWORK_STAR;
    public static final Item ENCHANTED_BOOK;
    public static final Item NETHER_BRICK;
-   public static final Item QUARTZ;
    public static final Item TNT_MINECART;
    public static final Item HOPPER_MINECART;
    public static final Item PRISMARINE_SHARD;
    public static final Item PRISMARINE_CRYSTALS;
    public static final Item RABBIT;
@@ -1072,62 +1107,40 @@
    public static final Item BLUE_CANDLE;
    public static final Item BROWN_CANDLE;
    public static final Item GREEN_CANDLE;
    public static final Item RED_CANDLE;
    public static final Item BLACK_CANDLE;
-   public static final Item AMETHYST_SHARD;
-   public static final Item BUDDING_AMETHYST;
    public static final Item SMALL_AMETHYST_BUD;
    public static final Item MEDIUM_AMETHYST_BUD;
    public static final Item LARGE_AMETHYST_BUD;
    public static final Item AMETHYST_CLUSTER;
-   public static final Item SPYGLASS;
-   public static final Item EXPOSED_COPPER;
-   public static final Item WEATHERED_COPPER;
-   public static final Item OXIDIZED_COPPER;
-   public static final Item CUT_COPPER;
-   public static final Item EXPOSED_CUT_COPPER;
-   public static final Item WEATHERED_CUT_COPPER;
-   public static final Item OXIDIZED_CUT_COPPER;
-   public static final Item CUT_COPPER_STAIRS;
-   public static final Item EXPOSED_CUT_COPPER_STAIRS;
-   public static final Item WEATHERED_CUT_COPPER_STAIRS;
-   public static final Item OXIDIZED_CUT_COPPER_STAIRS;
-   public static final Item CUT_COPPER_SLAB;
-   public static final Item EXPOSED_CUT_COPPER_SLAB;
-   public static final Item WEATHERED_CUT_COPPER_SLAB;
-   public static final Item OXIDIZED_CUT_COPPER_SLAB;
-   public static final Item WAXED_COPPER_BLOCK;
-   public static final Item WAXED_EXPOSED_COPPER;
-   public static final Item WAXED_WEATHERED_COPPER;
-   public static final Item WAXED_OXIDIZED_COPPER;
-   public static final Item WAXED_CUT_COPPER;
-   public static final Item WAXED_EXPOSED_CUT_COPPER;
-   public static final Item WAXED_WEATHERED_CUT_COPPER;
-   public static final Item WAXED_OXIDIZED_CUT_COPPER;
-   public static final Item WAXED_CUT_COPPER_STAIRS;
-   public static final Item WAXED_EXPOSED_CUT_COPPER_STAIRS;
-   public static final Item WAXED_WEATHERED_CUT_COPPER_STAIRS;
-   public static final Item WAXED_OXIDIZED_CUT_COPPER_STAIRS;
-   public static final Item WAXED_CUT_COPPER_SLAB;
-   public static final Item WAXED_EXPOSED_CUT_COPPER_SLAB;
-   public static final Item WAXED_WEATHERED_CUT_COPPER_SLAB;
-   public static final Item WAXED_OXIDIZED_CUT_COPPER_SLAB;
    public static final Item POWDER_SNOW_BUCKET;
    public static final Item POINTED_DRIPSTONE;
 
    public Items() {
    }
 
+   private static <T> Optional<T> ifPart2(T var0) {
+      return Optional.empty();
+   }
+
    private static Item registerBlock(Block var0) {
       return registerBlock(new BlockItem(var0, new Item.Properties()));
    }
 
    private static Item registerBlock(Block var0, CreativeModeTab var1) {
       return registerBlock(new BlockItem(var0, (new Item.Properties()).tab(var1)));
    }
 
+   private static Item registerBlock(Block var0, Optional<CreativeModeTab> var1) {
+      return (Item)var1.map((var1x) -> {
+         return registerBlock(var0, var1x);
+      }).orElseGet(() -> {
+         return registerBlock(var0);
+      });
+   }
+
    private static Item registerBlock(Block var0, CreativeModeTab var1, Block... var2) {
       BlockItem var3 = new BlockItem(var0, (new Item.Properties()).tab(var1));
       Block[] var4 = var2;
       int var5 = var2.length;
 
@@ -1222,15 +1235,47 @@
       COAL_BLOCK = registerBlock(Blocks.COAL_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       RAW_IRON_BLOCK = registerBlock(Blocks.RAW_IRON_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       RAW_COPPER_BLOCK = registerBlock(Blocks.RAW_COPPER_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       RAW_GOLD_BLOCK = registerBlock(Blocks.RAW_GOLD_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       AMETHYST_BLOCK = registerBlock(Blocks.AMETHYST_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      BUDDING_AMETHYST = registerBlock(Blocks.BUDDING_AMETHYST, CreativeModeTab.TAB_BUILDING_BLOCKS);
       IRON_BLOCK = registerBlock(Blocks.IRON_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       COPPER_BLOCK = registerBlock(Blocks.COPPER_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       GOLD_BLOCK = registerBlock(Blocks.GOLD_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       DIAMOND_BLOCK = registerBlock(Blocks.DIAMOND_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       NETHERITE_BLOCK = registerBlock(new BlockItem(Blocks.NETHERITE_BLOCK, (new Item.Properties()).tab(CreativeModeTab.TAB_BUILDING_BLOCKS).fireResistant()));
+      EXPOSED_COPPER = registerBlock(Blocks.EXPOSED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WEATHERED_COPPER = registerBlock(Blocks.WEATHERED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      OXIDIZED_COPPER = registerBlock(Blocks.OXIDIZED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CUT_COPPER = registerBlock(Blocks.CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      EXPOSED_CUT_COPPER = registerBlock(Blocks.EXPOSED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WEATHERED_CUT_COPPER = registerBlock(Blocks.WEATHERED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      OXIDIZED_CUT_COPPER = registerBlock(Blocks.OXIDIZED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CUT_COPPER_STAIRS = registerBlock(Blocks.CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      EXPOSED_CUT_COPPER_STAIRS = registerBlock(Blocks.EXPOSED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WEATHERED_CUT_COPPER_STAIRS = registerBlock(Blocks.WEATHERED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      OXIDIZED_CUT_COPPER_STAIRS = registerBlock(Blocks.OXIDIZED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CUT_COPPER_SLAB = registerBlock(Blocks.CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      EXPOSED_CUT_COPPER_SLAB = registerBlock(Blocks.EXPOSED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WEATHERED_CUT_COPPER_SLAB = registerBlock(Blocks.WEATHERED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      OXIDIZED_CUT_COPPER_SLAB = registerBlock(Blocks.OXIDIZED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_COPPER_BLOCK = registerBlock(Blocks.WAXED_COPPER_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_EXPOSED_COPPER = registerBlock(Blocks.WAXED_EXPOSED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_WEATHERED_COPPER = registerBlock(Blocks.WAXED_WEATHERED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_OXIDIZED_COPPER = registerBlock(Blocks.WAXED_OXIDIZED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_CUT_COPPER = registerBlock(Blocks.WAXED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_EXPOSED_CUT_COPPER = registerBlock(Blocks.WAXED_EXPOSED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_WEATHERED_CUT_COPPER = registerBlock(Blocks.WAXED_WEATHERED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_OXIDIZED_CUT_COPPER = registerBlock(Blocks.WAXED_OXIDIZED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_CUT_COPPER_STAIRS = registerBlock(Blocks.WAXED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_EXPOSED_CUT_COPPER_STAIRS = registerBlock(Blocks.WAXED_EXPOSED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_WEATHERED_CUT_COPPER_STAIRS = registerBlock(Blocks.WAXED_WEATHERED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_OXIDIZED_CUT_COPPER_STAIRS = registerBlock(Blocks.WAXED_OXIDIZED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_CUT_COPPER_SLAB = registerBlock(Blocks.WAXED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_EXPOSED_CUT_COPPER_SLAB = registerBlock(Blocks.WAXED_EXPOSED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_WEATHERED_CUT_COPPER_SLAB = registerBlock(Blocks.WAXED_WEATHERED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_OXIDIZED_CUT_COPPER_SLAB = registerBlock(Blocks.WAXED_OXIDIZED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       OAK_LOG = registerBlock(Blocks.OAK_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SPRUCE_LOG = registerBlock(Blocks.SPRUCE_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
       BIRCH_LOG = registerBlock(Blocks.BIRCH_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
       JUNGLE_LOG = registerBlock(Blocks.JUNGLE_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
       ACACIA_LOG = registerBlock(Blocks.ACACIA_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
@@ -1312,13 +1357,13 @@
       ORANGE_TULIP = registerBlock(Blocks.ORANGE_TULIP, CreativeModeTab.TAB_DECORATIONS);
       WHITE_TULIP = registerBlock(Blocks.WHITE_TULIP, CreativeModeTab.TAB_DECORATIONS);
       PINK_TULIP = registerBlock(Blocks.PINK_TULIP, CreativeModeTab.TAB_DECORATIONS);
       OXEYE_DAISY = registerBlock(Blocks.OXEYE_DAISY, CreativeModeTab.TAB_DECORATIONS);
       CORNFLOWER = registerBlock(Blocks.CORNFLOWER, CreativeModeTab.TAB_DECORATIONS);
-      SPORE_BLOSSOM = registerBlock(Blocks.SPORE_BLOSSOM, CreativeModeTab.TAB_DECORATIONS);
       LILY_OF_THE_VALLEY = registerBlock(Blocks.LILY_OF_THE_VALLEY, CreativeModeTab.TAB_DECORATIONS);
       WITHER_ROSE = registerBlock(Blocks.WITHER_ROSE, CreativeModeTab.TAB_DECORATIONS);
+      SPORE_BLOSSOM = registerBlock(Blocks.SPORE_BLOSSOM, CreativeModeTab.TAB_DECORATIONS);
       BROWN_MUSHROOM = registerBlock(Blocks.BROWN_MUSHROOM, CreativeModeTab.TAB_DECORATIONS);
       RED_MUSHROOM = registerBlock(Blocks.RED_MUSHROOM, CreativeModeTab.TAB_DECORATIONS);
       CRIMSON_FUNGUS = registerBlock(Blocks.CRIMSON_FUNGUS, CreativeModeTab.TAB_DECORATIONS);
       WARPED_FUNGUS = registerBlock(Blocks.WARPED_FUNGUS, CreativeModeTab.TAB_DECORATIONS);
       CRIMSON_ROOTS = registerBlock(Blocks.CRIMSON_ROOTS, CreativeModeTab.TAB_DECORATIONS);
@@ -1733,11 +1778,11 @@
       LECTERN = registerBlock(Blocks.LECTERN, CreativeModeTab.TAB_REDSTONE);
       TARGET = registerBlock(Blocks.TARGET, CreativeModeTab.TAB_REDSTONE);
       LEVER = registerBlock(Blocks.LEVER, CreativeModeTab.TAB_REDSTONE);
       LIGHTNING_ROD = registerBlock(Blocks.LIGHTNING_ROD, CreativeModeTab.TAB_REDSTONE);
       DAYLIGHT_DETECTOR = registerBlock(Blocks.DAYLIGHT_DETECTOR, CreativeModeTab.TAB_REDSTONE);
-      SCULK_SENSOR = registerBlock(Blocks.SCULK_SENSOR, CreativeModeTab.TAB_REDSTONE);
+      SCULK_SENSOR = registerBlock(Blocks.SCULK_SENSOR, ifPart2(CreativeModeTab.TAB_REDSTONE));
       TRIPWIRE_HOOK = registerBlock(Blocks.TRIPWIRE_HOOK, CreativeModeTab.TAB_REDSTONE);
       TRAPPED_CHEST = registerBlock(Blocks.TRAPPED_CHEST, CreativeModeTab.TAB_REDSTONE);
       TNT = registerBlock(Blocks.TNT, CreativeModeTab.TAB_REDSTONE);
       REDSTONE_LAMP = registerBlock(Blocks.REDSTONE_LAMP, CreativeModeTab.TAB_REDSTONE);
       NOTE_BLOCK = registerBlock(Blocks.NOTE_BLOCK, CreativeModeTab.TAB_REDSTONE);
@@ -1798,10 +1843,14 @@
       BOW = registerItem((String)"bow", new BowItem((new Item.Properties()).durability(384).tab(CreativeModeTab.TAB_COMBAT)));
       ARROW = registerItem((String)"arrow", new ArrowItem((new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
       COAL = registerItem("coal", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       CHARCOAL = registerItem("charcoal", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       DIAMOND = registerItem("diamond", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
+      EMERALD = registerItem("emerald", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
+      LAPIS_LAZULI = registerItem("lapis_lazuli", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
+      QUARTZ = registerItem("quartz", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
+      AMETHYST_SHARD = registerItem("amethyst_shard", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       RAW_IRON = registerItem("raw_iron", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       IRON_INGOT = registerItem("iron_ingot", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       RAW_COPPER = registerItem("raw_copper", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       COPPER_INGOT = registerItem("copper_ingot", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       RAW_GOLD = registerItem("raw_gold", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
@@ -1907,24 +1956,24 @@
       SLIME_BALL = registerItem("slime_ball", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       CHEST_MINECART = registerItem((String)"chest_minecart", new MinecartItem(AbstractMinecart.Type.CHEST, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
       FURNACE_MINECART = registerItem((String)"furnace_minecart", new MinecartItem(AbstractMinecart.Type.FURNACE, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
       EGG = registerItem((String)"egg", new EggItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_MATERIALS)));
       COMPASS = registerItem((String)"compass", new CompassItem((new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
-      BUNDLE = registerItem((String)"bundle", new BundleItem((new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TOOLS)));
+      BUNDLE = registerItem((String)"bundle", new BundleItem((new Item.Properties()).stacksTo(1).tab((CreativeModeTab)ifPart2(CreativeModeTab.TAB_TOOLS).orElse((Object)null))));
       FISHING_ROD = registerItem((String)"fishing_rod", new FishingRodItem((new Item.Properties()).durability(64).tab(CreativeModeTab.TAB_TOOLS)));
       CLOCK = registerItem("clock", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
+      SPYGLASS = registerItem((String)"spyglass", new SpyglassItem((new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS).stacksTo(1)));
       GLOWSTONE_DUST = registerItem("glowstone_dust", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       COD = registerItem("cod", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.COD)));
       SALMON = registerItem("salmon", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.SALMON)));
       TROPICAL_FISH = registerItem("tropical_fish", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.TROPICAL_FISH)));
       PUFFERFISH = registerItem("pufferfish", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.PUFFERFISH)));
       COOKED_COD = registerItem("cooked_cod", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.COOKED_COD)));
       COOKED_SALMON = registerItem("cooked_salmon", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.COOKED_SALMON)));
       INK_SAC = registerItem("ink_sac", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       GLOW_INK_SAC = registerItem("glow_ink_sac", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       COCOA_BEANS = registerItem((String)"cocoa_beans", new ItemNameBlockItem(Blocks.COCOA, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
-      LAPIS_LAZULI = registerItem("lapis_lazuli", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       WHITE_DYE = registerItem((String)"white_dye", new DyeItem(DyeColor.WHITE, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       ORANGE_DYE = registerItem((String)"orange_dye", new DyeItem(DyeColor.ORANGE, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       MAGENTA_DYE = registerItem((String)"magenta_dye", new DyeItem(DyeColor.MAGENTA, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       LIGHT_BLUE_DYE = registerItem((String)"light_blue_dye", new DyeItem(DyeColor.LIGHT_BLUE, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       YELLOW_DYE = registerItem((String)"yellow_dye", new DyeItem(DyeColor.YELLOW, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
@@ -2055,11 +2104,10 @@
       ZOMBIFIED_PIGLIN_SPAWN_EGG = registerItem((String)"zombified_piglin_spawn_egg", new SpawnEggItem(EntityType.ZOMBIFIED_PIGLIN, 15373203, 5009705, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       EXPERIENCE_BOTTLE = registerItem((String)"experience_bottle", new ExperienceBottleItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.UNCOMMON)));
       FIRE_CHARGE = registerItem((String)"fire_charge", new FireChargeItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       WRITABLE_BOOK = registerItem((String)"writable_book", new WritableBookItem((new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
       WRITTEN_BOOK = registerItem((String)"written_book", new WrittenBookItem((new Item.Properties()).stacksTo(16)));
-      EMERALD = registerItem("emerald", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       ITEM_FRAME = registerItem((String)"item_frame", new ItemFrameItem(EntityType.ITEM_FRAME, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS)));
       GLOW_ITEM_FRAME = registerItem((String)"glow_item_frame", new ItemFrameItem(EntityType.GLOW_ITEM_FRAME, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS)));
       FLOWER_POT = registerBlock(Blocks.FLOWER_POT, CreativeModeTab.TAB_DECORATIONS);
       CARROT = registerItem((String)"carrot", new ItemNameBlockItem(Blocks.CARROTS, (new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.CARROT)));
       POTATO = registerItem((String)"potato", new ItemNameBlockItem(Blocks.POTATOES, (new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.POTATO)));
@@ -2079,11 +2127,10 @@
       PUMPKIN_PIE = registerItem("pumpkin_pie", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.PUMPKIN_PIE)));
       FIREWORK_ROCKET = registerItem((String)"firework_rocket", new FireworkRocketItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       FIREWORK_STAR = registerItem((String)"firework_star", new FireworkStarItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       ENCHANTED_BOOK = registerItem((String)"enchanted_book", new EnchantedBookItem((new Item.Properties()).stacksTo(1).rarity(Rarity.UNCOMMON)));
       NETHER_BRICK = registerItem("nether_brick", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
-      QUARTZ = registerItem("quartz", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       TNT_MINECART = registerItem((String)"tnt_minecart", new MinecartItem(AbstractMinecart.Type.TNT, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
       HOPPER_MINECART = registerItem((String)"hopper_minecart", new MinecartItem(AbstractMinecart.Type.HOPPER, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
       PRISMARINE_SHARD = registerItem("prismarine_shard", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       PRISMARINE_CRYSTALS = registerItem("prismarine_crystals", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       RABBIT = registerItem("rabbit", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.RABBIT)));
@@ -2201,64 +2248,30 @@
       POLISHED_BLACKSTONE_BRICKS = registerBlock(Blocks.POLISHED_BLACKSTONE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       POLISHED_BLACKSTONE_BRICK_SLAB = registerBlock(Blocks.POLISHED_BLACKSTONE_BRICK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       POLISHED_BLACKSTONE_BRICK_STAIRS = registerBlock(Blocks.POLISHED_BLACKSTONE_BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       CRACKED_POLISHED_BLACKSTONE_BRICKS = registerBlock(Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       RESPAWN_ANCHOR = registerBlock(Blocks.RESPAWN_ANCHOR, CreativeModeTab.TAB_DECORATIONS);
-      CANDLE = registerBlock(Blocks.CANDLE, CreativeModeTab.TAB_DECORATIONS);
-      WHITE_CANDLE = registerBlock(Blocks.WHITE_CANDLE, CreativeModeTab.TAB_DECORATIONS);
-      ORANGE_CANDLE = registerBlock(Blocks.ORANGE_CANDLE, CreativeModeTab.TAB_DECORATIONS);
-      MAGENTA_CANDLE = registerBlock(Blocks.MAGENTA_CANDLE, CreativeModeTab.TAB_DECORATIONS);
-      LIGHT_BLUE_CANDLE = registerBlock(Blocks.LIGHT_BLUE_CANDLE, CreativeModeTab.TAB_DECORATIONS);
-      YELLOW_CANDLE = registerBlock(Blocks.YELLOW_CANDLE, CreativeModeTab.TAB_DECORATIONS);
-      LIME_CANDLE = registerBlock(Blocks.LIME_CANDLE, CreativeModeTab.TAB_DECORATIONS);
-      PINK_CANDLE = registerBlock(Blocks.PINK_CANDLE, CreativeModeTab.TAB_DECORATIONS);
-      GRAY_CANDLE = registerBlock(Blocks.GRAY_CANDLE, CreativeModeTab.TAB_DECORATIONS);
-      LIGHT_GRAY_CANDLE = registerBlock(Blocks.LIGHT_GRAY_CANDLE, CreativeModeTab.TAB_DECORATIONS);
-      CYAN_CANDLE = registerBlock(Blocks.CYAN_CANDLE, CreativeModeTab.TAB_DECORATIONS);
-      PURPLE_CANDLE = registerBlock(Blocks.PURPLE_CANDLE, CreativeModeTab.TAB_DECORATIONS);
-      BLUE_CANDLE = registerBlock(Blocks.BLUE_CANDLE, CreativeModeTab.TAB_DECORATIONS);
-      BROWN_CANDLE = registerBlock(Blocks.BROWN_CANDLE, CreativeModeTab.TAB_DECORATIONS);
-      GREEN_CANDLE = registerBlock(Blocks.GREEN_CANDLE, CreativeModeTab.TAB_DECORATIONS);
-      RED_CANDLE = registerBlock(Blocks.RED_CANDLE, CreativeModeTab.TAB_DECORATIONS);
-      BLACK_CANDLE = registerBlock(Blocks.BLACK_CANDLE, CreativeModeTab.TAB_DECORATIONS);
-      AMETHYST_SHARD = registerItem("amethyst_shard", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
-      BUDDING_AMETHYST = registerBlock(Blocks.BUDDING_AMETHYST, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CANDLE = registerBlock(Blocks.CANDLE, ifPart2(CreativeModeTab.TAB_DECORATIONS));
+      WHITE_CANDLE = registerBlock(Blocks.WHITE_CANDLE, ifPart2(CreativeModeTab.TAB_DECORATIONS));
+      ORANGE_CANDLE = registerBlock(Blocks.ORANGE_CANDLE, ifPart2(CreativeModeTab.TAB_DECORATIONS));
+      MAGENTA_CANDLE = registerBlock(Blocks.MAGENTA_CANDLE, ifPart2(CreativeModeTab.TAB_DECORATIONS));
+      LIGHT_BLUE_CANDLE = registerBlock(Blocks.LIGHT_BLUE_CANDLE, ifPart2(CreativeModeTab.TAB_DECORATIONS));
+      YELLOW_CANDLE = registerBlock(Blocks.YELLOW_CANDLE, ifPart2(CreativeModeTab.TAB_DECORATIONS));
+      LIME_CANDLE = registerBlock(Blocks.LIME_CANDLE, ifPart2(CreativeModeTab.TAB_DECORATIONS));
+      PINK_CANDLE = registerBlock(Blocks.PINK_CANDLE, ifPart2(CreativeModeTab.TAB_DECORATIONS));
+      GRAY_CANDLE = registerBlock(Blocks.GRAY_CANDLE, ifPart2(CreativeModeTab.TAB_DECORATIONS));
+      LIGHT_GRAY_CANDLE = registerBlock(Blocks.LIGHT_GRAY_CANDLE, ifPart2(CreativeModeTab.TAB_DECORATIONS));
+      CYAN_CANDLE = registerBlock(Blocks.CYAN_CANDLE, ifPart2(CreativeModeTab.TAB_DECORATIONS));
+      PURPLE_CANDLE = registerBlock(Blocks.PURPLE_CANDLE, ifPart2(CreativeModeTab.TAB_DECORATIONS));
+      BLUE_CANDLE = registerBlock(Blocks.BLUE_CANDLE, ifPart2(CreativeModeTab.TAB_DECORATIONS));
+      BROWN_CANDLE = registerBlock(Blocks.BROWN_CANDLE, ifPart2(CreativeModeTab.TAB_DECORATIONS));
+      GREEN_CANDLE = registerBlock(Blocks.GREEN_CANDLE, ifPart2(CreativeModeTab.TAB_DECORATIONS));
+      RED_CANDLE = registerBlock(Blocks.RED_CANDLE, ifPart2(CreativeModeTab.TAB_DECORATIONS));
+      BLACK_CANDLE = registerBlock(Blocks.BLACK_CANDLE, ifPart2(CreativeModeTab.TAB_DECORATIONS));
       SMALL_AMETHYST_BUD = registerBlock(Blocks.SMALL_AMETHYST_BUD, CreativeModeTab.TAB_DECORATIONS);
       MEDIUM_AMETHYST_BUD = registerBlock(Blocks.MEDIUM_AMETHYST_BUD, CreativeModeTab.TAB_DECORATIONS);
       LARGE_AMETHYST_BUD = registerBlock(Blocks.LARGE_AMETHYST_BUD, CreativeModeTab.TAB_DECORATIONS);
       AMETHYST_CLUSTER = registerBlock(Blocks.AMETHYST_CLUSTER, CreativeModeTab.TAB_DECORATIONS);
-      SPYGLASS = registerItem((String)"spyglass", new SpyglassItem((new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS).stacksTo(1)));
-      EXPOSED_COPPER = registerBlock(Blocks.EXPOSED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WEATHERED_COPPER = registerBlock(Blocks.WEATHERED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      OXIDIZED_COPPER = registerBlock(Blocks.OXIDIZED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      CUT_COPPER = registerBlock(Blocks.CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      EXPOSED_CUT_COPPER = registerBlock(Blocks.EXPOSED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WEATHERED_CUT_COPPER = registerBlock(Blocks.WEATHERED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      OXIDIZED_CUT_COPPER = registerBlock(Blocks.OXIDIZED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      CUT_COPPER_STAIRS = registerBlock(Blocks.CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      EXPOSED_CUT_COPPER_STAIRS = registerBlock(Blocks.EXPOSED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WEATHERED_CUT_COPPER_STAIRS = registerBlock(Blocks.WEATHERED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      OXIDIZED_CUT_COPPER_STAIRS = registerBlock(Blocks.OXIDIZED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      CUT_COPPER_SLAB = registerBlock(Blocks.CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      EXPOSED_CUT_COPPER_SLAB = registerBlock(Blocks.EXPOSED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WEATHERED_CUT_COPPER_SLAB = registerBlock(Blocks.WEATHERED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      OXIDIZED_CUT_COPPER_SLAB = registerBlock(Blocks.OXIDIZED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WAXED_COPPER_BLOCK = registerBlock(Blocks.WAXED_COPPER_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WAXED_EXPOSED_COPPER = registerBlock(Blocks.WAXED_EXPOSED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WAXED_WEATHERED_COPPER = registerBlock(Blocks.WAXED_WEATHERED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WAXED_OXIDIZED_COPPER = registerBlock(Blocks.WAXED_OXIDIZED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WAXED_CUT_COPPER = registerBlock(Blocks.WAXED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WAXED_EXPOSED_CUT_COPPER = registerBlock(Blocks.WAXED_EXPOSED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WAXED_WEATHERED_CUT_COPPER = registerBlock(Blocks.WAXED_WEATHERED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WAXED_OXIDIZED_CUT_COPPER = registerBlock(Blocks.WAXED_OXIDIZED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WAXED_CUT_COPPER_STAIRS = registerBlock(Blocks.WAXED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WAXED_EXPOSED_CUT_COPPER_STAIRS = registerBlock(Blocks.WAXED_EXPOSED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WAXED_WEATHERED_CUT_COPPER_STAIRS = registerBlock(Blocks.WAXED_WEATHERED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WAXED_OXIDIZED_CUT_COPPER_STAIRS = registerBlock(Blocks.WAXED_OXIDIZED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WAXED_CUT_COPPER_SLAB = registerBlock(Blocks.WAXED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WAXED_EXPOSED_CUT_COPPER_SLAB = registerBlock(Blocks.WAXED_EXPOSED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WAXED_WEATHERED_CUT_COPPER_SLAB = registerBlock(Blocks.WAXED_WEATHERED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      WAXED_OXIDIZED_CUT_COPPER_SLAB = registerBlock(Blocks.WAXED_OXIDIZED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       POWDER_SNOW_BUCKET = registerItem((String)"powder_snow_bucket", new SolidBucketItem(Blocks.POWDER_SNOW, SoundEvents.BUCKET_EMPTY_POWDER_SNOW, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
       POINTED_DRIPSTONE = registerBlock(Blocks.POINTED_DRIPSTONE, CreativeModeTab.TAB_DECORATIONS);
    }
 }
