--- net/minecraft/commands/arguments/selector/options/EntitySelectorOptions.java
+++ net/minecraft/commands/arguments/selector/options/EntitySelectorOptions.java
@@ -255,11 +255,11 @@
 
                for(int var8 = 0; var8 < var7; ++var8) {
                   GameType var9 = var6[var8];
                   if (var9.getName().toLowerCase(Locale.ROOT).startsWith(var3)) {
                      if (var5) {
-                        var1x.suggest('!' + var9.getName());
+                        var1x.suggest("!" + var9.getName());
                      }
 
                      if (var4) {
                         var1x.suggest(var9.getName());
                      }
@@ -596,22 +596,22 @@
       Iterator var3 = OPTIONS.entrySet().iterator();
 
       while(var3.hasNext()) {
          Entry var4 = (Entry)var3.next();
          if (((EntitySelectorOptions.Option)var4.getValue()).predicate.test(var0) && ((String)var4.getKey()).toLowerCase(Locale.ROOT).startsWith(var2)) {
-            var1.suggest((String)var4.getKey() + '=', ((EntitySelectorOptions.Option)var4.getValue()).description);
+            var1.suggest((String)var4.getKey() + "=", ((EntitySelectorOptions.Option)var4.getValue()).description);
          }
       }
 
    }
 
-   static class Option {
+   private static class Option {
       public final EntitySelectorOptions.Modifier modifier;
       public final Predicate<EntitySelectorParser> predicate;
       public final Component description;
 
-      private Option(EntitySelectorOptions.Modifier var1, Predicate<EntitySelectorParser> var2, Component var3) {
+      Option(EntitySelectorOptions.Modifier var1, Predicate<EntitySelectorParser> var2, Component var3) {
          this.modifier = var1;
          this.predicate = var2;
          this.description = var3;
       }
    }
