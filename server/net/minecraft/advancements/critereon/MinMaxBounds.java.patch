--- net/minecraft/advancements/critereon/MinMaxBounds.java
+++ net/minecraft/advancements/critereon/MinMaxBounds.java
@@ -3,13 +3,15 @@
 import com.google.gson.JsonElement;
 import com.google.gson.JsonNull;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonPrimitive;
 import com.mojang.brigadier.StringReader;
+import com.mojang.brigadier.exceptions.BuiltInExceptionProvider;
 import com.mojang.brigadier.exceptions.CommandSyntaxException;
 import com.mojang.brigadier.exceptions.DynamicCommandExceptionType;
 import com.mojang.brigadier.exceptions.SimpleCommandExceptionType;
+import java.util.Objects;
 import java.util.function.BiFunction;
 import java.util.function.Function;
 import java.util.function.Supplier;
 import javax.annotation.Nullable;
 import net.minecraft.network.chat.TranslatableComponent;
@@ -144,17 +146,17 @@
    private static <T> T optionallyFormat(@Nullable T var0, Function<T, T> var1) {
       return var0 == null ? null : var1.apply(var0);
    }
 
    @FunctionalInterface
-   public interface BoundsFromReaderFactory<T extends Number, R extends MinMaxBounds<T>> {
-      R create(StringReader var1, @Nullable T var2, @Nullable T var3) throws CommandSyntaxException;
+   protected interface BoundsFactory<T extends Number, R extends MinMaxBounds<T>> {
+      R create(@Nullable T var1, @Nullable T var2);
    }
 
    @FunctionalInterface
-   public interface BoundsFactory<T extends Number, R extends MinMaxBounds<T>> {
-      R create(@Nullable T var1, @Nullable T var2);
+   protected interface BoundsFromReaderFactory<T extends Number, R extends MinMaxBounds<T>> {
+      R create(StringReader var1, @Nullable T var2, @Nullable T var3) throws CommandSyntaxException;
    }
 
    public static class Floats extends MinMaxBounds<Float> {
       public static final MinMaxBounds.Floats ANY = new MinMaxBounds.Floats((Float)null, (Float)null);
       private final Double minSq;
@@ -220,11 +222,15 @@
             return var0x;
          });
       }
 
       public static MinMaxBounds.Floats fromReader(StringReader var0, Function<Float, Float> var1) throws CommandSyntaxException {
-         return (MinMaxBounds.Floats)fromReader(var0, MinMaxBounds.Floats::create, Float::parseFloat, CommandSyntaxException.BUILT_IN_EXCEPTIONS::readerInvalidFloat, var1);
+         MinMaxBounds.BoundsFromReaderFactory var10001 = MinMaxBounds.Floats::create;
+         Function var10002 = Float::parseFloat;
+         BuiltInExceptionProvider var10003 = CommandSyntaxException.BUILT_IN_EXCEPTIONS;
+         Objects.requireNonNull(var10003);
+         return (MinMaxBounds.Floats)fromReader(var0, var10001, var10002, var10003::readerInvalidFloat, var1);
       }
    }
 
    public static class Ints extends MinMaxBounds<Integer> {
       public static final MinMaxBounds.Ints ANY = new MinMaxBounds.Ints((Integer)null, (Integer)null);
@@ -291,9 +297,13 @@
             return var0x;
          });
       }
 
       public static MinMaxBounds.Ints fromReader(StringReader var0, Function<Integer, Integer> var1) throws CommandSyntaxException {
-         return (MinMaxBounds.Ints)fromReader(var0, MinMaxBounds.Ints::create, Integer::parseInt, CommandSyntaxException.BUILT_IN_EXCEPTIONS::readerInvalidInt, var1);
+         MinMaxBounds.BoundsFromReaderFactory var10001 = MinMaxBounds.Ints::create;
+         Function var10002 = Integer::parseInt;
+         BuiltInExceptionProvider var10003 = CommandSyntaxException.BUILT_IN_EXCEPTIONS;
+         Objects.requireNonNull(var10003);
+         return (MinMaxBounds.Ints)fromReader(var0, var10001, var10002, var10003::readerInvalidInt, var1);
       }
    }
 }
