--- net/minecraft/server/packs/repository/PackRepository.java
+++ net/minecraft/server/packs/repository/PackRepository.java
@@ -49,11 +49,11 @@
       Iterator var2 = this.sources.iterator();
 
       while(var2.hasNext()) {
          RepositorySource var3 = (RepositorySource)var2.next();
          var3.loadPacks((var1x) -> {
-            Pack var10000 = (Pack)var1.put(var1x.getId(), var1x);
+            var1.put(var1x.getId(), var1x);
          }, this.constructor);
       }
 
       return ImmutableMap.copyOf((Map)var1);
    }
@@ -77,11 +77,11 @@
    }
 
    private Stream<Pack> getAvailablePacks(Collection<String> var1) {
       Stream var10000 = var1.stream();
       Map var10001 = this.available;
-      var10001.getClass();
+      Objects.requireNonNull(var10001);
       return var10000.map(var10001::get).filter(Objects::nonNull);
    }
 
    public Collection<String> getAvailableIds() {
       return this.available.keySet();
